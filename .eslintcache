[{"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\index.tsx":"1","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\App.tsx":"2","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\context\\RouteContext.tsx":"3","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Header\\Header.tsx":"4","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\pages\\SchedulePage.tsx":"5","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Header\\HeaderElements.tsx":"6","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Autocomplete\\Autocomplete.tsx":"7","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\hooks\\useItinerary.tsx":"8","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Tab\\Tab.tsx":"9","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\index.js":"10","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\hooks\\useAutocomplete.tsx":"11","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\hooks\\useCoords.tsx":"12","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\Map.js":"13","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Tab\\TabPanel.tsx":"14","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Stops\\Stops.tsx":"15","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\CircleMarkerEl.tsx":"16","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Itineraries\\Itinerary\\Itinerary.tsx":"17","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Itineraries\\Leg\\Leg.js":"18","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\helpers\\helpers.tsx":"19","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Itineraries\\Itinerary\\ItineraryElements.tsx":"20","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Itineraries\\Leg\\LegElements.tsx":"21","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\StopAutocomplete\\StopAutocomplete.tsx":"22","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\hooks\\useStopsAutocomplete.tsx":"23","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Drawer\\Drawer.tsx":"24","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\TimeLine\\LegTimeline.tsx":"25","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\TimeLine\\useTimelineStyles.tsx":"26","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\pages\\useSchedulePageStyles.tsx":"27","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\PointSelection\\PointSelection.tsx":"28","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\PointSelection\\usePointSelectionStyles.tsx":"29","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\LegPath\\LegPath.tsx":"30","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\LegPath\\useLegPathStyles.tsx":"31","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\GetCurrentCoords\\GetCurrentCoords.tsx":"32","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\GetCurrentCoords\\useCurrentCoordsStyles.tsx":"33","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Autocomplete\\useAutocompleteStyles.tsx":"34"},{"size":219,"mtime":1609161738357,"results":"35","hashOfConfig":"36"},{"size":1083,"mtime":1610387493651,"results":"37","hashOfConfig":"36"},{"size":1407,"mtime":1610216058418,"results":"38","hashOfConfig":"36"},{"size":550,"mtime":1610388473621,"results":"39","hashOfConfig":"36"},{"size":1968,"mtime":1610441747563,"results":"40","hashOfConfig":"36"},{"size":2102,"mtime":1608913621879,"results":"41","hashOfConfig":"36"},{"size":2502,"mtime":1610442662386,"results":"42","hashOfConfig":"36"},{"size":1777,"mtime":1610302350297,"results":"43","hashOfConfig":"36"},{"size":1186,"mtime":1610391572435,"results":"44","hashOfConfig":"36"},{"size":667,"mtime":1610442396069,"results":"45","hashOfConfig":"36"},{"size":863,"mtime":1609874822407,"results":"46","hashOfConfig":"36"},{"size":838,"mtime":1610103254461,"results":"47","hashOfConfig":"36"},{"size":1462,"mtime":1610442124180,"results":"48","hashOfConfig":"36"},{"size":611,"mtime":1609936067728,"results":"49","hashOfConfig":"36"},{"size":1157,"mtime":1610390634659,"results":"50","hashOfConfig":"36"},{"size":939,"mtime":1610389249653,"results":"51","hashOfConfig":"36"},{"size":2456,"mtime":1609695984818,"results":"52","hashOfConfig":"36"},{"size":1535,"mtime":1610388903441,"results":"53","hashOfConfig":"36"},{"size":1706,"mtime":1610384067538,"results":"54","hashOfConfig":"36"},{"size":1089,"mtime":1610442688056,"results":"55","hashOfConfig":"36"},{"size":3092,"mtime":1609866528235,"results":"56","hashOfConfig":"36"},{"size":2198,"mtime":1610389576699,"results":"57","hashOfConfig":"36"},{"size":407,"mtime":1610389894995,"results":"58","hashOfConfig":"36"},{"size":911,"mtime":1610390211160,"results":"59","hashOfConfig":"36"},{"size":2874,"mtime":1610441471269,"results":"60","hashOfConfig":"36"},{"size":760,"mtime":1610441454428,"results":"61","hashOfConfig":"36"},{"size":1424,"mtime":1610441742575,"results":"62","hashOfConfig":"36"},{"size":2138,"mtime":1610442179926,"results":"63","hashOfConfig":"36"},{"size":948,"mtime":1610442171226,"results":"64","hashOfConfig":"36"},{"size":3547,"mtime":1610442296385,"results":"65","hashOfConfig":"36"},{"size":349,"mtime":1610442254515,"results":"66","hashOfConfig":"36"},{"size":2059,"mtime":1610442404353,"results":"67","hashOfConfig":"36"},{"size":374,"mtime":1610442386930,"results":"68","hashOfConfig":"36"},{"size":398,"mtime":1610442611419,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"nfe6tj",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"91"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"72"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"72"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"72"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"72"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\index.tsx",[],["145","146"],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\App.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\context\\RouteContext.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Header\\Header.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\pages\\SchedulePage.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Header\\HeaderElements.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Autocomplete\\Autocomplete.tsx",["147"],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\hooks\\useItinerary.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Tab\\Tab.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\index.js",[],["148","149"],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\hooks\\useAutocomplete.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\hooks\\useCoords.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\Map.js",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Tab\\TabPanel.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Stops\\Stops.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\CircleMarkerEl.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Itineraries\\Itinerary\\Itinerary.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Itineraries\\Leg\\Leg.js",["150","151","152","153","154","155","156","157"],"import { useContext, useState } from 'react'\r\nimport { RouteContext } from '../../../context/RouteContext';\r\nimport { convertDuration, convertTime, getMinutes, defineWidth } from '../../../helpers/helpers'\r\nimport { LegWrapper, LegStripe, Departure, defineIcon } from './LegElements'\r\nvar polyline = require('@mapbox/polyline');\r\n\r\nconst Leg = ({ width, mode, routeName, leg}) => {\r\n    const [displayInfo, setDisplayInfo] = useState(false)\r\n\r\n    const { setSelectedLeg } = useContext(RouteContext)\r\n\r\n    const handleClick = () => {\r\n        if (leg) {\r\n            setSelectedLeg({\r\n                ...leg,\r\n                legGeometry: {\r\n                    points: polyline.decode(leg.legGeometry.points)\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <> {mode === 'WALK' || mode === 'WAIT' && width < 5\r\n            ? null\r\n            : <LegWrapper width={width} onClick={handleClick} onMouseEnter={() => setDisplayInfo(true)} onMouseLeave={() => setDisplayInfo(false)}>\r\n                <LegStripe mode={mode}>\r\n                    {defineIcon(mode)}\r\n                    <span>{width > 5 && routeName} {mode === 'WAIT' && 'min'}</span>\r\n                </LegStripe>\r\n                {/* <Departure>\r\n                    {mode !== 'WAIT' && mode !== 'WALK' && <p><span>{convertTime(leg.startTime)}</span> {leg.from.name}</p>}\r\n                </Departure> */}\r\n                {/* {displayInfo && <Info leg={leg} />} */}\r\n            </LegWrapper>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Leg\r\n","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\helpers\\helpers.tsx",["158"],"export function convertDuration(duration: number) {\r\n    let num = duration\r\n    let minutes = num / 60\r\n    let rminutes = Math.floor(minutes)\r\n    return rminutes\r\n}\r\n\r\nexport function convertTime(timestamp: Date) {\r\n    const date = new Date(timestamp)\r\n    const hours = ('0' + date.getHours()).substr(-2)\r\n    const minutes = ('0' + date.getMinutes()).substr(-2)\r\n\r\n    return hours + ':' + minutes\r\n}\r\n\r\nexport function getMinutes(startTimestamp: Date, endTimestamp: Date) {\r\n    const startDate = new Date(startTimestamp)\r\n    const endDate = new Date(endTimestamp)\r\n\r\n    const diff = endDate.getTime() - startDate.getTime()\r\n    return Math.round(diff / 60000)\r\n}\r\n\r\nexport function defineWidth(startTime: Date, endTime: Date, duration: number) {\r\n    return Math.round((getMinutes(startTime, endTime) * 100) / convertDuration(duration))\r\n}\r\n\r\n\r\nexport function setColor(mode: string, fn: ({}) => void) {\r\n    switch (mode) {\r\n        case 'BUS':\r\n            fn({ color: '#007AC9' })\r\n            break;\r\n\r\n        case 'TRAM':\r\n            fn({ color: '#00985F' })\r\n            break;\r\n\r\n        case 'RAIL':\r\n            fn({ color: '#8C4799' })\r\n            break;\r\n\r\n        case 'SUBWAY':\r\n            fn({ color: '#FF6319' })\r\n            break;\r\n\r\n        default:\r\n            break;\r\n    }\r\n}\r\n\r\nexport function defineColor(mode: string) {\r\n    return mode === 'BUS'\r\n        ? '#007AC9'\r\n        : mode === 'TRAM'\r\n            ? '#00985F'\r\n            : mode === 'RAIL'\r\n                ? '#8C4799'\r\n                : mode === 'SUBWAY'\r\n                    ? '#FF6319'\r\n                    : mode === 'WAIT'\r\n                        ? '#fff'\r\n                        : 'lightgrey';\r\n}\r\n","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Itineraries\\Itinerary\\ItineraryElements.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Itineraries\\Leg\\LegElements.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\StopAutocomplete\\StopAutocomplete.tsx",["159","160","161","162"],"import React, { useState, useEffect, useContext } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useAutocomplete } from '../../hooks/useAutocomplete'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { RouteContext } from '../../context/RouteContext';\r\nimport { useStopsAutocomplete } from '../../hooks/useStopsAutocomplete'\r\nimport { IStop } from '../../interfaces/Interfaces'\r\n\r\nconst useAutocompleteStyle = makeStyles({\r\n    input: {\r\n        fontSize: 13\r\n    },\r\n    noOptions: {\r\n        fontSize: 13\r\n    },\r\n    option: {\r\n        fontSize: 13\r\n    },\r\n    tag: {\r\n        fontSize: 13\r\n    }\r\n})\r\n\r\ninterface ILocation {\r\n    label: string;\r\n}\r\n\r\ninterface PropTypes {\r\n    id: string,\r\n    setStop: (value: IStop) => void\r\n}\r\n\r\nexport default function StopAutocomplete({ id, setStop }: PropTypes) {\r\n    const [term, setTerm] = useState('')\r\n    const [options, setOptions] = useState([])\r\n    const classes = useAutocompleteStyle();\r\n\r\n    const { data } = useStopsAutocomplete(term)\r\n\r\n    useEffect(() => {\r\n        data && setOptions(data.stops.map((stop: any) => stop.name))\r\n    }, [data])\r\n\r\n    return (\r\n        <div style={{ width: 300 }}>\r\n            <Autocomplete\r\n                freeSolo\r\n                fullWidth\r\n                selectOnFocus\r\n                blurOnSelect\r\n                classes={{ input: classes.input, noOptions: classes.noOptions, option: classes.option }}\r\n                noOptionsText='Type to get locations'\r\n                onChange={(_, value) => setStop(data?.stops.find((stop: any) => stop.name === value))}\r\n                onInputChange={(_, inputValue) => setTerm(inputValue)}\r\n                value={term}\r\n                options={options}\r\n                renderInput={(params) => (\r\n                    <TextField\r\n                        {...params}\r\n                        label={id}\r\n                        size='small'\r\n                        required\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                    />\r\n                )}\r\n            />\r\n        </div>\r\n    );\r\n}","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\hooks\\useStopsAutocomplete.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Drawer\\Drawer.tsx",["163"],"import { useContext, useCallback } from 'react'\r\nimport LegTimeline from '../TimeLine/LegTimeline'\r\nimport { Drawer } from '@material-ui/core/'\r\nimport { RouteContext } from '../../context/RouteContext'\r\n\r\n\r\nexport default function LegDrawer() {\r\n    const { displayDrawer, setDisplayDrawer } = useContext(RouteContext)\r\n\r\n    const toggleDrawer = useCallback((open: boolean) => (e: KeyboardEvent | MouseEvent) => {\r\n        if (e.type === 'keydown' &&\r\n            ((e as KeyboardEvent).key === 'Tab' ||\r\n                (e as KeyboardEvent).key === 'Shift')\r\n        ) { return }\r\n        \r\n        setDisplayDrawer(open);\r\n    }, [])\r\n\r\n    return (\r\n        <Drawer\r\n            anchor={'right'}\r\n            open={displayDrawer}\r\n            onClose={toggleDrawer(false)}\r\n            transitionDuration={400}\r\n        >\r\n            <LegTimeline toggleDrawer={toggleDrawer} />\r\n        </Drawer>\r\n    )\r\n}","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\TimeLine\\LegTimeline.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\TimeLine\\useTimelineStyles.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\pages\\useSchedulePageStyles.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\PointSelection\\PointSelection.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\PointSelection\\usePointSelectionStyles.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\LegPath\\LegPath.tsx",["164","165","166","167","168"],"import { useState, useEffect, useContext } from 'react'\r\nimport { Polyline, Tooltip, Rectangle, useMap, Polygon, Marker } from \"react-leaflet\";\r\nimport L from 'leaflet';\r\nimport { Alert } from '@material-ui/lab'\r\nimport CircleMarkerEl from '../CircleMarkerEl'\r\nimport { setColor, defineColor } from '../../../helpers/helpers'\r\nimport { defineIcon } from '../../Itineraries/Leg/LegElements'\r\nimport { RouteContext } from '../../../context/RouteContext'\r\nimport { useLegPathsStyles } from './useLegPathStyles'\r\n\r\n\r\nconst PolygonWithText = (props: any) => {\r\n    const icon = L.divIcon({\r\n        className: 'rectangle-icon',\r\n        html: `<div>${props.route}</div>`\r\n    })\r\n\r\n    return (\r\n        <Marker position={props.center} icon={icon} />\r\n    )\r\n}\r\n\r\n\r\nexport default function LegPath({ selectedLeg }: any) {\r\n    const [startPoints, setStartPoints] = useState<any>([60.19, 24.94])\r\n    const [endPoints, setEndPoints] = useState<any>([60.19, 24.94])\r\n    const [points, setPoints] = useState([])\r\n    const [bounds, setBounds] = useState<any>([[60.19, 24.94], [60.19, 24.94]])\r\n    const [center, setCenter] = useState<any>([60.19, 24.94])\r\n    const [pathColor, setPathColor] = useState({})\r\n    const { displayDrawer, setDisplayDrawer } = useContext(RouteContext)\r\n\r\n    const classes = useLegPathsStyles()\r\n\r\n    const map = useMap()\r\n\r\n    useEffect(() => {\r\n        map.fitBounds([startPoints, endPoints])\r\n    }, [startPoints, endPoints])\r\n\r\n\r\n    useEffect(() => {\r\n        if (selectedLeg) {\r\n            setColor(selectedLeg?.mode, setPathColor)\r\n\r\n            const points = selectedLeg?.legGeometry.points\r\n            setStartPoints(points[0])\r\n            setEndPoints(points[points.length - 1])\r\n            setPoints(points)\r\n            const northWestLat = points[Math.round(points.length / 2)][0] - .0016\r\n            const northWestLon = points[Math.round(points.length / 2)][1] - .005\r\n            const southEastLat = points[Math.round(points.length / 2)][0] + .001\r\n            const southEastLon = points[Math.round(points.length / 2)][1] + .007\r\n            setBounds([[northWestLat, northWestLon], [northWestLat, northWestLon]])\r\n            setCenter(points[Math.round(points.length / 2)])\r\n            // setBounds([points[Math.round(points.length/2)], points[Math.round(points.length/2) - 10]])\r\n        }\r\n    }, [selectedLeg])\r\n\r\n    return (\r\n        <>\r\n            <CircleMarkerEl coords={startPoints} type='departure' color={pathColor} />\r\n            <CircleMarkerEl coords={endPoints} type='arrival' color={pathColor} />\r\n            <PolygonWithText\r\n                mode={selectedLeg?.mode} route={selectedLeg?.trip?.routeShortName} coords={bounds} center={center} color={pathColor} />\r\n            {/* <Rectangle bounds={bounds} pathOptions={pathColor} fillOpacity={1} /> */}\r\n            <Polyline weight={4} smoothFactor={1} pathOptions={pathColor} positions={points}>\r\n                {selectedLeg && <Tooltip>{selectedLeg?.trip?.routeShortName}</Tooltip>}\r\n            </Polyline>\r\n            <div className={classes.legInfo}>\r\n                <Alert\r\n                    style={{ backgroundColor: defineColor(selectedLeg.mode) }}\r\n                    icon={defineIcon(selectedLeg.mode)}\r\n                    variant=\"filled\"\r\n                    severity=\"info\"\r\n                    onClick={() => setDisplayDrawer(!displayDrawer)}\r\n                >\r\n                    {selectedLeg.mode} {selectedLeg.trip.routeShortName}\r\n                </Alert>\r\n            </div>\r\n        </>\r\n    )\r\n}","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\LegPath\\useLegPathStyles.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\GetCurrentCoords\\GetCurrentCoords.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\GetCurrentCoords\\useCurrentCoordsStyles.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Autocomplete\\useAutocompleteStyles.tsx",[],{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","severity":1,"message":"174","line":33,"column":8,"nodeType":"175","endLine":33,"endColumn":31,"suggestions":"176"},{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","replacedBy":"172"},{"ruleId":"177","severity":1,"message":"178","line":3,"column":10,"nodeType":"179","messageId":"180","endLine":3,"endColumn":25},{"ruleId":"177","severity":1,"message":"181","line":3,"column":27,"nodeType":"179","messageId":"180","endLine":3,"endColumn":38},{"ruleId":"177","severity":1,"message":"182","line":3,"column":40,"nodeType":"179","messageId":"180","endLine":3,"endColumn":50},{"ruleId":"177","severity":1,"message":"183","line":3,"column":52,"nodeType":"179","messageId":"180","endLine":3,"endColumn":63},{"ruleId":"177","severity":1,"message":"184","line":4,"column":33,"nodeType":"179","messageId":"180","endLine":4,"endColumn":42},{"ruleId":"177","severity":1,"message":"185","line":8,"column":12,"nodeType":"179","messageId":"180","endLine":8,"endColumn":23},{"ruleId":"186","severity":1,"message":"187","line":24,"column":29,"nodeType":"188","messageId":"189","endLine":24,"endColumn":31},{"ruleId":"186","severity":1,"message":"187","line":24,"column":48,"nodeType":"188","messageId":"189","endLine":24,"endColumn":50},{"ruleId":"190","severity":1,"message":"191","line":29,"column":45,"nodeType":"192","messageId":"193","endLine":29,"endColumn":47},{"ruleId":"194","severity":1,"message":"195","line":1,"column":38,"nodeType":"179","messageId":"180","endLine":1,"endColumn":48},{"ruleId":"194","severity":1,"message":"196","line":3,"column":10,"nodeType":"179","messageId":"180","endLine":3,"endColumn":25},{"ruleId":"194","severity":1,"message":"197","line":6,"column":10,"nodeType":"179","messageId":"180","endLine":6,"endColumn":22},{"ruleId":"194","severity":1,"message":"198","line":25,"column":11,"nodeType":"179","messageId":"180","endLine":25,"endColumn":20},{"ruleId":"173","severity":1,"message":"199","line":17,"column":8,"nodeType":"175","endLine":17,"endColumn":10,"suggestions":"200"},{"ruleId":"194","severity":1,"message":"201","line":2,"column":29,"nodeType":"179","messageId":"180","endLine":2,"endColumn":38},{"ruleId":"194","severity":1,"message":"202","line":2,"column":48,"nodeType":"179","messageId":"180","endLine":2,"endColumn":55},{"ruleId":"173","severity":1,"message":"203","line":39,"column":8,"nodeType":"175","endLine":39,"endColumn":32,"suggestions":"204"},{"ruleId":"194","severity":1,"message":"205","line":52,"column":19,"nodeType":"179","messageId":"180","endLine":52,"endColumn":31},{"ruleId":"194","severity":1,"message":"206","line":53,"column":19,"nodeType":"179","messageId":"180","endLine":53,"endColumn":31},"no-native-reassign",["207"],"no-negated-in-lhs",["208"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'coords?.id', 'formData', 'id', and 'setFormData'. Either include them or remove the dependency array.","ArrayExpression",["209"],"no-unused-vars","'convertDuration' is defined but never used.","Identifier","unusedVar","'convertTime' is defined but never used.","'getMinutes' is defined but never used.","'defineWidth' is defined but never used.","'Departure' is defined but never used.","'displayInfo' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","@typescript-eslint/no-unused-vars","'useContext' is defined but never used.","'useAutocomplete' is defined but never used.","'RouteContext' is defined but never used.","'ILocation' is defined but never used.","React Hook useCallback has a missing dependency: 'setDisplayDrawer'. Either include it or remove the dependency array.",["210"],"'Rectangle' is defined but never used.","'Polygon' is defined but never used.","React Hook useEffect has a missing dependency: 'map'. Either include it or remove the dependency array.",["211"],"'southEastLat' is assigned a value but never used.","'southEastLon' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"212","fix":"213"},{"desc":"214","fix":"215"},{"desc":"216","fix":"217"},"Update the dependencies array to be: [coords?.id, currentCoordsLocation, formData, id, setFormData]",{"range":"218","text":"219"},"Update the dependencies array to be: [setDisplayDrawer]",{"range":"220","text":"221"},"Update the dependencies array to be: [startPoints, endPoints, map]",{"range":"222","text":"223"},[1162,1185],"[coords?.id, currentCoordsLocation, formData, id, setFormData]",[633,635],"[setDisplayDrawer]",[1428,1452],"[startPoints, endPoints, map]"]