[{"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\index.tsx":"1","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\App.tsx":"2","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Header\\Header.tsx":"3","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\pages\\SchedulePage.tsx":"4","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\hooks\\useItinerary.tsx":"5","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\index.js":"6","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\hooks\\useAutocomplete.tsx":"7","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\hooks\\useCoords.tsx":"8","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\helpers\\helpers.tsx":"9","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\hooks\\useStopsAutocomplete.tsx":"10","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\TimeLine\\LegTimeline.tsx":"11","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\interfaces\\Interfaces.tsx":"12","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\reducers\\formReducer.tsx":"13","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\reducers\\stopReducer.tsx":"14","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\hooks\\useRouteAutocomplete.tsx":"15","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\reducers\\routeReducer.tsx":"16","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\hooks\\useStopsByPattern.tsx":"17","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\TimeLine\\LegTimeLineItem.tsx":"18","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Generic\\Table.tsx":"19","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Generic\\Drawer.tsx":"20","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Generic\\TabPanel.tsx":"21","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Generic\\Autocomplete.tsx":"22","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\LeftPanel\\LocationAutocomplete.tsx":"23","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\LeftPanel\\LeftPanel.tsx":"24","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\LeftPanel\\Itinerary.tsx":"25","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\styles\\ItineraryElements.tsx":"26","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\LeftPanel\\Leg.js":"27","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\styles\\LegElements.tsx":"28","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\RightPanel\\Map\\Map.js":"29","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\RightPanel\\Map\\LegPath.tsx":"30","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\RightPanel\\Map\\LocationTooltip.tsx":"31","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\RightPanel\\Map\\LocationSelector.tsx":"32","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\RightPanel\\Map\\LocationSelectorControls.tsx":"33","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\RightPanel\\RightPanel.tsx":"34","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\RightPanel\\Routes\\RouteAutocomplete.tsx":"35","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\RightPanel\\Routes\\RouteSchedule.tsx":"36","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\RightPanel\\Stops\\StopAutocomplete.tsx":"37","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\RightPanel\\Stops\\StopSchedule.tsx":"38","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\styles\\HeaderElements.tsx":"39"},{"size":642,"mtime":1611067813758,"results":"40","hashOfConfig":"41"},{"size":1102,"mtime":1611067617143,"results":"42","hashOfConfig":"41"},{"size":548,"mtime":1611066410410,"results":"43","hashOfConfig":"41"},{"size":750,"mtime":1611060106167,"results":"44","hashOfConfig":"41"},{"size":1811,"mtime":1611065424763,"results":"45","hashOfConfig":"41"},{"size":1455,"mtime":1611066827893,"results":"46","hashOfConfig":"41"},{"size":899,"mtime":1610558648468,"results":"47","hashOfConfig":"41"},{"size":989,"mtime":1610971889784,"results":"48","hashOfConfig":"41"},{"size":1948,"mtime":1611003148155,"results":"49","hashOfConfig":"41"},{"size":873,"mtime":1611047099286,"results":"50","hashOfConfig":"41"},{"size":1198,"mtime":1611067563428,"results":"51","hashOfConfig":"41"},{"size":3634,"mtime":1610911218588,"results":"52","hashOfConfig":"41"},{"size":1317,"mtime":1610962390303,"results":"53","hashOfConfig":"41"},{"size":215,"mtime":1610796259202,"results":"54","hashOfConfig":"41"},{"size":522,"mtime":1611047063081,"results":"55","hashOfConfig":"41"},{"size":218,"mtime":1610879493155,"results":"56","hashOfConfig":"41"},{"size":634,"mtime":1611047109718,"results":"57","hashOfConfig":"41"},{"size":1851,"mtime":1611065645478,"results":"58","hashOfConfig":"41"},{"size":1503,"mtime":1611053695019,"results":"59","hashOfConfig":"41"},{"size":920,"mtime":1611066860405,"results":"60","hashOfConfig":"41"},{"size":567,"mtime":1611061960664,"results":"61","hashOfConfig":"41"},{"size":1332,"mtime":1611062042798,"results":"62","hashOfConfig":"41"},{"size":1714,"mtime":1611067016086,"results":"63","hashOfConfig":"41"},{"size":1995,"mtime":1611067060958,"results":"64","hashOfConfig":"41"},{"size":2398,"mtime":1611066908358,"results":"65","hashOfConfig":"41"},{"size":1087,"mtime":1611065694913,"results":"66","hashOfConfig":"41"},{"size":1128,"mtime":1611065488314,"results":"67","hashOfConfig":"41"},{"size":3092,"mtime":1611063048998,"results":"68","hashOfConfig":"41"},{"size":1432,"mtime":1611066300358,"results":"69","hashOfConfig":"41"},{"size":2736,"mtime":1611067179769,"results":"70","hashOfConfig":"41"},{"size":1005,"mtime":1611065586455,"results":"71","hashOfConfig":"41"},{"size":2388,"mtime":1611065541228,"results":"72","hashOfConfig":"41"},{"size":3016,"mtime":1611065557320,"results":"73","hashOfConfig":"41"},{"size":1883,"mtime":1611067472441,"results":"74","hashOfConfig":"41"},{"size":2784,"mtime":1611067263443,"results":"75","hashOfConfig":"41"},{"size":1561,"mtime":1611067344650,"results":"76","hashOfConfig":"41"},{"size":1201,"mtime":1611067379633,"results":"77","hashOfConfig":"41"},{"size":1177,"mtime":1611065017842,"results":"78","hashOfConfig":"41"},{"size":2102,"mtime":1611066406197,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"nfe6tj",{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"84"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"84"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"84"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"84"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"84"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\index.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\App.tsx",[],["165","166"],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Header\\Header.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\pages\\SchedulePage.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\hooks\\useItinerary.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\index.js",[],["167","168"],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\hooks\\useAutocomplete.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\hooks\\useCoords.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\helpers\\helpers.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\hooks\\useStopsAutocomplete.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\TimeLine\\LegTimeline.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\interfaces\\Interfaces.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\reducers\\formReducer.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\reducers\\stopReducer.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\hooks\\useRouteAutocomplete.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\reducers\\routeReducer.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\hooks\\useStopsByPattern.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\TimeLine\\LegTimeLineItem.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Generic\\Table.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Generic\\Drawer.tsx",["169"],"import { useContext, useCallback } from 'react'\r\nimport { LegTimeline } from '../../components'\r\nimport { Drawer } from '@material-ui/core/'\r\nimport { RouteContext } from '../../App'\r\n\r\nexport default function LegDrawer() {\r\n    const { dispatch, state: { displayDrawer } } = useContext(RouteContext)\r\n\r\n    const toggleDrawer = useCallback((open: boolean) => (e: KeyboardEvent | MouseEvent) => {\r\n        if (e.type === 'keydown' &&\r\n            ((e as KeyboardEvent).key === 'Tab' ||\r\n                (e as KeyboardEvent).key === 'Shift')\r\n        ) { return }\r\n        \r\n        dispatch({ type: 'DISPLAY_DRAWER', payload: open })\r\n    }, [])\r\n\r\n    return (\r\n        <Drawer\r\n            anchor={'right'}\r\n            open={displayDrawer}\r\n            onClose={toggleDrawer(false)}\r\n            transitionDuration={400}\r\n        >\r\n            <LegTimeline toggleDrawer={toggleDrawer} />\r\n        </Drawer>\r\n    )\r\n}","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Generic\\TabPanel.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Generic\\Autocomplete.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\LeftPanel\\LocationAutocomplete.tsx",["170"],"import { useState, useEffect, useContext, memo } from 'react'\r\nimport { Autocomplete } from '../../components'\r\nimport { useAutocomplete } from '../../hooks/useAutocomplete'\r\nimport { useCoords } from '../../hooks/useCoords'\r\nimport { RouteContext } from '../../App'\r\n\r\nexport default memo(function LocationAutocomplete({ id }: { id: string }) {\r\n    const [term, setTerm] = useState('')\r\n    const [doFetch, setDoFetch] = useState(false)\r\n    const { state: { coords }, dispatch } = useContext(RouteContext)\r\n\r\n    const { data: suggestions = [] } = useAutocomplete(doFetch, term)\r\n    const { data: currentCoordsLocation } = useCoords(coords?.coords)\r\n\r\n    useEffect(() => {\r\n        if (currentCoordsLocation && coords?.id === id) {\r\n            setTerm(currentCoordsLocation?.label)\r\n            dispatch({ type: 'ADD_DATA', payload: { [id]: currentCoordsLocation } })\r\n        }\r\n    }, [currentCoordsLocation])\r\n\r\n    useEffect(() => term.length && setDoFetch(true), [term])\r\n\r\n    const handleChange = (_: any, value: string) => {\r\n        dispatch({\r\n            type: 'ADD_DATA',\r\n            payload: { [id]: suggestions.find(suggestion => suggestion.label === value) }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div style={{ width: 300 }}>\r\n            <Autocomplete\r\n                handleChange={handleChange}\r\n                handleInputChange={(_: any, inputValue: string) => setTerm(inputValue)}\r\n                value={term}\r\n                options={suggestions && suggestions.map(suggestion => suggestion.label)}\r\n                label={id === 'origin' ? 'Select origin' : 'Select destination'}\r\n                noOptionsText='Type to get locations'\r\n            />\r\n        </div>\r\n    )\r\n})","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\LeftPanel\\LeftPanel.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\LeftPanel\\Itinerary.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\styles\\ItineraryElements.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\LeftPanel\\Leg.js",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\styles\\LegElements.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\RightPanel\\Map\\Map.js",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\RightPanel\\Map\\LegPath.tsx",["171"],"import { useEffect, useContext, memo } from 'react'\r\nimport { LocationTooltip } from '../../../components'\r\nimport { Alert } from '@material-ui/lab'\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\r\nimport { defineColor } from '../../../helpers/helpers'\r\nimport { RouteContext } from '../../../App'\r\nimport { defineIcon } from '../../../styles/LegElements'\r\nimport { ILeg } from '../../../interfaces/Interfaces'\r\n\r\nimport { Polyline, Tooltip, useMap, Marker } from \"react-leaflet\"\r\nimport L from 'leaflet';\r\n\r\nconst useStyles = makeStyles((_: Theme) =>\r\n    createStyles({\r\n        legInfo: {\r\n            position: 'absolute',\r\n            bottom: '2.4rem',\r\n            zIndex: 3000,\r\n            opacity: .8,\r\n            cursor: 'pointer'\r\n        }\r\n    })\r\n)\r\n\r\nconst PolygonWithText = (props: any) => {\r\n    const icon = L.divIcon({\r\n        className: 'rectangle-icon',\r\n        html: `<div>${props.route}</div>`\r\n    })\r\n    return <Marker position={props.center} icon={icon} />\r\n}\r\n\r\nexport default memo(function LegPath(props: { selectedLeg: ILeg }) {\r\n    const {\r\n        selectedLeg: {\r\n            mode,\r\n            trip: {\r\n                routeShortName: route\r\n            },\r\n            legGeometry: {\r\n                points\r\n            }\r\n        }\r\n    }: { selectedLeg: ILeg } = props\r\n    const { state, dispatch } = useContext(RouteContext)\r\n    const classes = useStyles()\r\n    const map = useMap()\r\n\r\n    const startPoint = points[0]\r\n    const centerPoint = points[Math.round(points.length / 2)]\r\n    const endPoint = points[points.length - 1]\r\n\r\n    useEffect(() => {\r\n        map.fitBounds([startPoint, endPoint])\r\n    }, [points])\r\n\r\n    return (\r\n        <>\r\n            <LocationTooltip coords={startPoint} type='departure' />\r\n            <LocationTooltip coords={endPoint} type='arrival' />\r\n            <PolygonWithText route={route} center={centerPoint} />\r\n            {points &&\r\n                <Polyline\r\n                    weight={4}\r\n                    smoothFactor={1}\r\n                    pathOptions={{ color: defineColor(mode) }}\r\n                    positions={points}\r\n                >\r\n                    {<Tooltip>{route}</Tooltip>}\r\n                </Polyline>}\r\n            <div className={classes.legInfo}>\r\n                <Alert\r\n                    style={{ backgroundColor: defineColor(mode) }}\r\n                    icon={defineIcon(mode)}\r\n                    variant=\"filled\"\r\n                    severity=\"info\"\r\n                    onClick={() => dispatch({ type: 'DISPLAY_DRAWER', payload: !state.displayDrawer })}\r\n                >\r\n                    {mode} {route}\r\n                </Alert>\r\n            </div>\r\n        </>\r\n    )\r\n})","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\RightPanel\\Map\\LocationTooltip.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\RightPanel\\Map\\LocationSelector.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\RightPanel\\Map\\LocationSelectorControls.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\RightPanel\\RightPanel.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\RightPanel\\Routes\\RouteAutocomplete.tsx",["172"],"import { useState, useEffect } from 'react'\r\nimport { Autocomplete } from '../../../components'\r\nimport { BottomNavigation, BottomNavigationAction } from '@material-ui/core'\r\nimport DirectionsBusIcon from '@material-ui/icons/DirectionsBus'\r\nimport DirectionsRailwayIcon from '@material-ui/icons/DirectionsRailway'\r\nimport SubwayIcon from '@material-ui/icons/Subway'\r\nimport TramIcon from '@material-ui/icons/Tram'\r\nimport { useRouteAutocomplete } from '../../../hooks/useRouteAutocomplete'\r\nimport { IRoute } from '../../../interfaces/Interfaces'\r\n\r\nconst navActions = [\r\n    { value: \"Bus\", icon: <DirectionsBusIcon /> },\r\n    { value: \"Rail\", icon: <DirectionsRailwayIcon /> },\r\n    { value: \"Subway\", icon: <SubwayIcon /> },\r\n    { value: \"Tram\", icon: <TramIcon /> }\r\n]\r\n\r\nexport default function RouteAutocomplete({ dispatch }: any) {\r\n    const [term, setTerm] = useState('')\r\n    const [options, setOptions] = useState([])\r\n    const [mode, setMode] = useState(null)\r\n\r\n    const [fetchRoutes, { data }] = useRouteAutocomplete(term, mode)\r\n\r\n    useEffect(() => {\r\n        if (mode !== null && term !== null) fetchRoutes()\r\n    }, [mode])\r\n\r\n    useEffect(() => {\r\n        data && setOptions([...data.routes]\r\n            .sort((a: IRoute, b: IRoute) => a.shortName.localeCompare(b.shortName))\r\n            .map(route => route.shortName + ' ' + route.longName)\r\n        )\r\n    }, [data])\r\n\r\n    const handleNavChange = (_: any, newValue: string) => {\r\n        setMode(newValue)\r\n        setTerm('')\r\n        dispatch({ type: 'ADD_ROUTE', payload: null })\r\n    }\r\n\r\n    const handleInputChange = (_: any, value: string) => {\r\n        dispatch({\r\n            type: 'ADD_ROUTE',\r\n            payload: data?.routes.find((route: IRoute) => route.shortName + ' ' + route.longName === value)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <BottomNavigation value={mode} onChange={handleNavChange} showLabels style={{ width: 500 }}>\r\n                {navActions.map(action =>\r\n                    <BottomNavigationAction\r\n                        key={action.value}\r\n                        value={action.value.toUpperCase()}\r\n                        label={action.value}\r\n                        icon={action.icon} />)}\r\n            </BottomNavigation>\r\n            {mode &&\r\n                <div style={{ width: 400 }}>\r\n                    <Autocomplete\r\n                        handleChange={handleInputChange}\r\n                        handleInputChange={(_: any, inputValue: string) => setTerm(inputValue)}\r\n                        value={term}\r\n                        options={options}\r\n                        label='Select route'\r\n                        noOptionsText='Type to get locations'\r\n                    />\r\n                </div>}\r\n        </>\r\n    )\r\n}","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\RightPanel\\Routes\\RouteSchedule.tsx",["173"],"import { useEffect, useReducer } from 'react'\r\nimport { RouteAutocomplete, Table } from '../../../components'\r\nimport { CssBaseline, Container, Box } from '@material-ui/core'\r\nimport { routeReducer } from '../../../reducers/routeReducer'\r\nimport { defineDeparture } from '../../../helpers/helpers'\r\nimport { useStopsByPattern } from '../../../hooks/useStopsByPattern'\r\nimport { IStopPattern } from '../../../interfaces/Interfaces'\r\n\r\nexport default function RouteSchedule() {\r\n  const [{ route }, dispatch] = useReducer(routeReducer, { route: null })\r\n\r\n  const [fetchPatterns, { data }] = useStopsByPattern(route?.patterns?.[0].code)\r\n\r\n  useEffect(() => {\r\n    if (route?.patterns && route?.patterns?.[0].code !== null) fetchPatterns()\r\n  }, [route?.patterns])\r\n\r\n  const rows = data && data.pattern.stops.map((stop: IStopPattern, idx: number) => {\r\n    const route = stop?.stopTimesForPattern?.[0]\r\n    const nextRoute = stop?.stopTimesForPattern?.[1]\r\n\r\n    return {\r\n      '#': route?.stopSequence ? route.stopSequence : idx + 1,\r\n      'Route': stop?.name,\r\n      'Departure': defineDeparture(route?.scheduledDeparture),\r\n      'Next Departure': defineDeparture(nextRoute?.scheduledDeparture)\r\n    }\r\n  })\r\n\r\n  return (\r\n    <>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"md\">\r\n        <Box p={2} display='flex' flexDirection='column' alignItems='center'>\r\n          <RouteAutocomplete dispatch={dispatch} />\r\n        </Box>\r\n        {data &&\r\n            <Table rows={rows} maxHeight={{ maxHeight: 300 }} />}\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\RightPanel\\Stops\\StopAutocomplete.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\RightPanel\\Stops\\StopSchedule.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\styles\\HeaderElements.tsx",[],{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","replacedBy":"177"},{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","severity":1,"message":"179","line":16,"column":8,"nodeType":"180","endLine":16,"endColumn":10,"suggestions":"181"},{"ruleId":"178","severity":1,"message":"182","line":20,"column":8,"nodeType":"180","endLine":20,"endColumn":31,"suggestions":"183"},{"ruleId":"178","severity":1,"message":"184","line":55,"column":8,"nodeType":"180","endLine":55,"endColumn":16,"suggestions":"185"},{"ruleId":"178","severity":1,"message":"186","line":27,"column":8,"nodeType":"180","endLine":27,"endColumn":14,"suggestions":"187"},{"ruleId":"178","severity":1,"message":"188","line":16,"column":6,"nodeType":"180","endLine":16,"endColumn":23,"suggestions":"189"},"no-native-reassign",["190"],"no-negated-in-lhs",["191"],"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["192"],"React Hook useEffect has missing dependencies: 'coords?.id', 'dispatch', and 'id'. Either include them or remove the dependency array.",["193"],"React Hook useEffect has missing dependencies: 'endPoint', 'map', and 'startPoint'. Either include them or remove the dependency array.",["194"],"React Hook useEffect has missing dependencies: 'fetchRoutes' and 'term'. Either include them or remove the dependency array.",["195"],"React Hook useEffect has a missing dependency: 'fetchPatterns'. Either include it or remove the dependency array.",["196"],"no-global-assign","no-unsafe-negation",{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},{"desc":"201","fix":"202"},{"desc":"203","fix":"204"},{"desc":"205","fix":"206"},"Update the dependencies array to be: [dispatch]",{"range":"207","text":"208"},"Update the dependencies array to be: [coords?.id, currentCoordsLocation, dispatch, id]",{"range":"209","text":"210"},"Update the dependencies array to be: [endPoint, map, points, startPoint]",{"range":"211","text":"212"},"Update the dependencies array to be: [fetchRoutes, mode, term]",{"range":"213","text":"214"},"Update the dependencies array to be: [fetchPatterns, route?.patterns]",{"range":"215","text":"216"},[642,644],"[dispatch]",[893,916],"[coords?.id, currentCoordsLocation, dispatch, id]",[1682,1690],"[endPoint, map, points, startPoint]",[1138,1144],"[fetchRoutes, mode, term]",[744,761],"[fetchPatterns, route?.patterns]"]