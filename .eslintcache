[{"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\index.tsx":"1","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\App.tsx":"2","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\context\\RouteContext.tsx":"3","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Header\\Header.tsx":"4","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\pages\\SchedulePage.tsx":"5","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Header\\HeaderElements.tsx":"6","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Autocomplete\\Autocomplete.tsx":"7","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\hooks\\useItinerary.tsx":"8","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Tab\\Tab.tsx":"9","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\index.js":"10","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\hooks\\useAutocomplete.tsx":"11","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\hooks\\useCoords.tsx":"12","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\Map.js":"13","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Tab\\TabPanel.tsx":"14","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Stops\\Stops.tsx":"15","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\CircleMarkerEl.tsx":"16","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Itineraries\\Itinerary\\Itinerary.tsx":"17","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Itineraries\\Leg\\Leg.js":"18","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\helpers\\helpers.tsx":"19","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Itineraries\\Itinerary\\ItineraryElements.tsx":"20","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Itineraries\\Leg\\LegElements.tsx":"21","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\StopAutocomplete\\StopAutocomplete.tsx":"22","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\hooks\\useStopsAutocomplete.tsx":"23","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Drawer\\Drawer.tsx":"24","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\TimeLine\\LegTimeline.tsx":"25","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\TimeLine\\useTimelineStyles.tsx":"26","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\pages\\useSchedulePageStyles.tsx":"27","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\PointSelection\\PointSelection.tsx":"28","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\PointSelection\\usePointSelectionStyles.tsx":"29","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\LegPath\\LegPath.tsx":"30","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\LegPath\\useLegPathStyles.tsx":"31","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\GetCurrentCoords\\GetCurrentCoords.tsx":"32","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\GetCurrentCoords\\useCurrentCoordsStyles.tsx":"33","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Autocomplete\\useAutocompleteStyles.tsx":"34","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\interfaces\\Interfaces.tsx":"35"},{"size":219,"mtime":1609161738357,"results":"36","hashOfConfig":"37"},{"size":1116,"mtime":1610533954927,"results":"38","hashOfConfig":"37"},{"size":1391,"mtime":1610529274758,"results":"39","hashOfConfig":"37"},{"size":550,"mtime":1610388473621,"results":"40","hashOfConfig":"37"},{"size":2028,"mtime":1610467843833,"results":"41","hashOfConfig":"37"},{"size":2102,"mtime":1608913621879,"results":"42","hashOfConfig":"37"},{"size":2516,"mtime":1610534675188,"results":"43","hashOfConfig":"37"},{"size":1777,"mtime":1610475768746,"results":"44","hashOfConfig":"37"},{"size":1226,"mtime":1610535092190,"results":"45","hashOfConfig":"37"},{"size":667,"mtime":1610442396069,"results":"46","hashOfConfig":"37"},{"size":875,"mtime":1610473911373,"results":"47","hashOfConfig":"37"},{"size":910,"mtime":1610475724001,"results":"48","hashOfConfig":"37"},{"size":1462,"mtime":1610534602103,"results":"49","hashOfConfig":"37"},{"size":567,"mtime":1610469653705,"results":"50","hashOfConfig":"37"},{"size":1173,"mtime":1610470112358,"results":"51","hashOfConfig":"37"},{"size":939,"mtime":1610389249653,"results":"52","hashOfConfig":"37"},{"size":2527,"mtime":1610529337140,"results":"53","hashOfConfig":"37"},{"size":1017,"mtime":1610535794740,"results":"54","hashOfConfig":"37"},{"size":1754,"mtime":1610477956472,"results":"55","hashOfConfig":"37"},{"size":1089,"mtime":1610442688056,"results":"56","hashOfConfig":"37"},{"size":3092,"mtime":1609866528235,"results":"57","hashOfConfig":"37"},{"size":2113,"mtime":1610475992694,"results":"58","hashOfConfig":"37"},{"size":407,"mtime":1610389894995,"results":"59","hashOfConfig":"37"},{"size":911,"mtime":1610471210487,"results":"60","hashOfConfig":"37"},{"size":2947,"mtime":1610477993207,"results":"61","hashOfConfig":"37"},{"size":760,"mtime":1610441454428,"results":"62","hashOfConfig":"37"},{"size":1424,"mtime":1610461253581,"results":"63","hashOfConfig":"37"},{"size":2141,"mtime":1610472258486,"results":"64","hashOfConfig":"37"},{"size":948,"mtime":1610442171226,"results":"65","hashOfConfig":"37"},{"size":3578,"mtime":1610475503438,"results":"66","hashOfConfig":"37"},{"size":349,"mtime":1610442254515,"results":"67","hashOfConfig":"37"},{"size":2059,"mtime":1610442404353,"results":"68","hashOfConfig":"37"},{"size":374,"mtime":1610442386930,"results":"69","hashOfConfig":"37"},{"size":398,"mtime":1610442611419,"results":"70","hashOfConfig":"37"},{"size":2891,"mtime":1610479101066,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"nfe6tj",{"filePath":"75","messages":"76","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"74"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"74"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"74"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"74"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"74"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"74"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\index.tsx",[],["150","151"],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\App.tsx",["152","153","154","155","156","157","158","159","160","161","162","163","164","165"],"import { useState } from 'react'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport { QueryClient, QueryClientProvider } from 'react-query'\nimport { ApolloClient, InMemoryCache } from '@apollo/client';\nimport { ApolloProvider } from '@apollo/client';\nimport Header from './components/Header/Header'\nimport SchedulePage from './pages/SchedulePage'\nimport RouteContextProvider from './context/RouteContext'\n\nconst queryClient = new QueryClient()\n\nconst client = new ApolloClient({\n  uri: 'https://api.digitransit.fi/routing/v1/routers/finland/index/graphql',\n  cache: new InMemoryCache()\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <QueryClientProvider client={queryClient}>\n        <RouteContextProvider>\n          <BrowserRouter>\n            <Header />\n            <Switch>\n              <Route exact path='/' component={SchedulePage} />\n              <Route path='/schedule' component={SchedulePage} />\n            </Switch>\n          </BrowserRouter>\n        </RouteContextProvider>\n      </QueryClientProvider>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\context\\RouteContext.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Header\\Header.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\pages\\SchedulePage.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Header\\HeaderElements.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Autocomplete\\Autocomplete.tsx",["166"],"import { useState, useEffect, useContext } from 'react'\r\nimport { useAutocomplete } from '../../hooks/useAutocomplete'\r\nimport { useCoords } from '../../hooks/useCoords';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { RouteContext } from '../../context/RouteContext';\r\nimport { useAutocompleteStyles } from './useAutocompleteStyles'\r\nimport { ISuggestion } from '../../interfaces/Interfaces'\r\n\r\ntype PropTypes = {\r\n    id: string\r\n}\r\n\r\nexport default function InputAutocomplete({ id }: PropTypes) {\r\n    const [term, setTerm] = useState<string>('')\r\n    const [doFetch, setDoFetch] = useState<boolean>(false)\r\n    const { setFormData, formData, coords } = useContext(RouteContext)\r\n    const classes = useAutocompleteStyles();\r\n\r\n    const { data: suggestions = [] } = useAutocomplete(doFetch, term)\r\n    const { data: currentCoordsLocation } = useCoords(coords?.coords)\r\n\r\n    useEffect(() => {\r\n        if (currentCoordsLocation && coords?.id === id) {\r\n            setTerm(currentCoordsLocation?.label)\r\n            setFormData({ ...formData, [id]: currentCoordsLocation })\r\n        }\r\n    }, [currentCoordsLocation])\r\n\r\n    useEffect(() => {\r\n        term.length && setDoFetch(true)\r\n    }, [term])\r\n\r\n    return (\r\n        <div style={{ width: 300 }}>\r\n            <Autocomplete\r\n                freeSolo\r\n                fullWidth\r\n                selectOnFocus\r\n                blurOnSelect\r\n                classes={{ input: classes.input, noOptions: classes.noOptions, option: classes.option }}\r\n                noOptionsText='Type to get locations'\r\n                onChange={(_, value) => setFormData({\r\n                    ...formData,\r\n                    [id]: suggestions.find((suggestion: ISuggestion) => suggestion.label === value)\r\n                })\r\n                }\r\n                onInputChange={(_, inputValue) => setTerm(inputValue)}\r\n                value={term}\r\n                options={suggestions && suggestions.map((suggestion: ISuggestion) => suggestion.label)}\r\n                renderInput={(params) => (\r\n                    <TextField\r\n                        {...params}\r\n                        label={id === 'origin' ? 'Select origin' : 'Select destination'}\r\n                        size='small'\r\n                        required\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                    />\r\n                )}\r\n            />\r\n        </div>\r\n    )\r\n}","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\hooks\\useItinerary.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Tab\\Tab.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\index.js",[],["167","168"],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\hooks\\useAutocomplete.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\hooks\\useCoords.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\Map.js",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Tab\\TabPanel.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Stops\\Stops.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\CircleMarkerEl.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Itineraries\\Itinerary\\Itinerary.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Itineraries\\Leg\\Leg.js",["169","170"],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\helpers\\helpers.tsx",["171"],"export function convertDuration(duration: number): number {\r\n    let num = duration\r\n    let minutes = num / 60\r\n    let rminutes = Math.floor(minutes)\r\n    return rminutes\r\n}\r\n\r\nexport function convertTime(timestamp: Date): string {\r\n    const date = new Date(timestamp)\r\n    const hours = ('0' + date.getHours()).substr(-2)\r\n    const minutes = ('0' + date.getMinutes()).substr(-2)\r\n\r\n    return hours + ':' + minutes\r\n}\r\n\r\nexport function getMinutes(startTimestamp: number, endTimestamp: number): number {\r\n    const startDate = new Date(startTimestamp)\r\n    const endDate = new Date(endTimestamp)\r\n\r\n    const diff = endDate.getTime() - startDate.getTime()\r\n    return Math.round(diff / 60000)\r\n}\r\n\r\nexport function defineWidth(startTime: number, endTime: number, duration: number): number {\r\n    return Math.round((getMinutes(startTime, endTime) * 100) / convertDuration(duration))\r\n}\r\n\r\n\r\nexport function setColor(mode: string, fn: ({}) => void) {\r\n    switch (mode) {\r\n        case 'BUS':\r\n            fn({ color: '#007AC9' })\r\n            break;\r\n\r\n        case 'TRAM':\r\n            fn({ color: '#00985F' })\r\n            break;\r\n\r\n        case 'RAIL':\r\n            fn({ color: '#8C4799' })\r\n            break;\r\n\r\n        case 'SUBWAY':\r\n            fn({ color: '#FF6319' })\r\n            break;\r\n\r\n        default:\r\n            break;\r\n    }\r\n}\r\n\r\nexport function defineColor(mode: string): string {\r\n    return mode === 'BUS'\r\n        ? '#007AC9'\r\n        : mode === 'TRAM'\r\n            ? '#00985F'\r\n            : mode === 'RAIL'\r\n                ? '#8C4799'\r\n                : mode === 'SUBWAY'\r\n                    ? '#FF6319'\r\n                    : mode === 'WAIT'\r\n                        ? '#fff'\r\n                        : 'lightgrey';\r\n}\r\n","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Itineraries\\Itinerary\\ItineraryElements.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Itineraries\\Leg\\LegElements.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\StopAutocomplete\\StopAutocomplete.tsx",["172"],"import React, { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { RouteContext } from '../../context/RouteContext';\r\nimport { useStopsAutocomplete } from '../../hooks/useStopsAutocomplete'\r\nimport { IStopDetails } from '../../interfaces/Interfaces'\r\n\r\nconst useAutocompleteStyle = makeStyles({\r\n    input: {\r\n        fontSize: 13\r\n    },\r\n    noOptions: {\r\n        fontSize: 13\r\n    },\r\n    option: {\r\n        fontSize: 13\r\n    },\r\n    tag: {\r\n        fontSize: 13\r\n    }\r\n})\r\n\r\ntype PropTypes = {\r\n    id: string,\r\n    setStop: (stop: IStopDetails) => void\r\n}\r\n\r\nexport default function StopAutocomplete({ id, setStop }: PropTypes) {\r\n    const [term, setTerm] = useState('')\r\n    const [options, setOptions] = useState<string[]>([])\r\n    const classes = useAutocompleteStyle();\r\n\r\n    const { data } = useStopsAutocomplete(term)\r\n\r\n    useEffect(() => {\r\n        data && setOptions(data.stops.map((stop: IStopDetails) => stop.name))\r\n    }, [data])\r\n\r\n    return (\r\n        <div style={{ width: 300 }}>\r\n            <Autocomplete\r\n                freeSolo\r\n                fullWidth\r\n                selectOnFocus\r\n                blurOnSelect\r\n                classes={{ input: classes.input, noOptions: classes.noOptions, option: classes.option }}\r\n                noOptionsText='Type to get locations'\r\n                onChange={(_, value) => setStop(data?.stops.find((stop: IStopDetails) => stop.name === value))}\r\n                onInputChange={(_, inputValue) => setTerm(inputValue)}\r\n                value={term}\r\n                options={options}\r\n                renderInput={(params) => (\r\n                    <TextField\r\n                        {...params}\r\n                        label={id}\r\n                        size='small'\r\n                        required\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                    />\r\n                )}\r\n            />\r\n        </div>\r\n    );\r\n}","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\hooks\\useStopsAutocomplete.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Drawer\\Drawer.tsx",["173"],"import { useContext, useCallback } from 'react'\r\nimport LegTimeline from '../TimeLine/LegTimeline'\r\nimport { Drawer } from '@material-ui/core/'\r\nimport { RouteContext } from '../../context/RouteContext'\r\n\r\n\r\nexport default function LegDrawer() {\r\n    const { displayDrawer, setDisplayDrawer } = useContext(RouteContext)\r\n\r\n    const toggleDrawer = useCallback((open: boolean) => (e: KeyboardEvent | MouseEvent) => {\r\n        if (e.type === 'keydown' &&\r\n            ((e as KeyboardEvent).key === 'Tab' ||\r\n                (e as KeyboardEvent).key === 'Shift')\r\n        ) { return }\r\n        \r\n        setDisplayDrawer(open);\r\n    }, [])\r\n\r\n    return (\r\n        <Drawer\r\n            anchor={'right'}\r\n            open={displayDrawer}\r\n            onClose={toggleDrawer(false)}\r\n            transitionDuration={400}\r\n        >\r\n            <LegTimeline toggleDrawer={toggleDrawer} />\r\n        </Drawer>\r\n    )\r\n}","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\TimeLine\\LegTimeline.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\TimeLine\\useTimelineStyles.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\pages\\useSchedulePageStyles.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\PointSelection\\PointSelection.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\PointSelection\\usePointSelectionStyles.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\LegPath\\LegPath.tsx",["174","175","176","177","178"],"import { useState, useEffect, useContext } from 'react'\r\nimport { Polyline, Tooltip, Rectangle, useMap, Polygon, Marker } from \"react-leaflet\";\r\nimport L, { LatLngTuple } from 'leaflet';\r\nimport { Alert } from '@material-ui/lab'\r\nimport CircleMarkerEl from '../CircleMarkerEl'\r\nimport { setColor, defineColor } from '../../../helpers/helpers'\r\nimport { defineIcon } from '../../Itineraries/Leg/LegElements'\r\nimport { RouteContext } from '../../../context/RouteContext'\r\nimport { useLegPathsStyles } from './useLegPathStyles'\r\n\r\nconst DEF_LOCATION: LatLngTuple = [60.19, 24.94]\r\n\r\nconst PolygonWithText = (props: any) => {\r\n    const icon = L.divIcon({\r\n        className: 'rectangle-icon',\r\n        html: `<div>${props.route}</div>`\r\n    })\r\n    return (\r\n        <Marker position={props.center} icon={icon} />\r\n    )\r\n}\r\n\r\nexport default function LegPath({ selectedLeg }: any) {\r\n    const [startPoints, setStartPoints] = useState(DEF_LOCATION)\r\n    const [endPoints, setEndPoints] = useState(DEF_LOCATION)\r\n    const [points, setPoints] = useState([])\r\n    const [bounds, setBounds] = useState([DEF_LOCATION, DEF_LOCATION])\r\n    const [center, setCenter] = useState(DEF_LOCATION)\r\n    const [pathColor, setPathColor] = useState({})\r\n    const { displayDrawer, setDisplayDrawer } = useContext(RouteContext)\r\n\r\n    const classes = useLegPathsStyles()\r\n\r\n    const map = useMap()\r\n\r\n    useEffect(() => {\r\n        map.fitBounds([startPoints, endPoints])\r\n    }, [startPoints, endPoints])\r\n\r\n    useEffect(() => {\r\n        if (selectedLeg) {\r\n            setColor(selectedLeg?.mode, setPathColor)\r\n\r\n            const points = selectedLeg?.legGeometry.points\r\n            setStartPoints(points[0])\r\n            setEndPoints(points[points.length - 1])\r\n            setPoints(points)\r\n            const northWestLat = points[Math.round(points.length / 2)][0] - .0016\r\n            const northWestLon = points[Math.round(points.length / 2)][1] - .005\r\n            const southEastLat = points[Math.round(points.length / 2)][0] + .001\r\n            const southEastLon = points[Math.round(points.length / 2)][1] + .007\r\n            setBounds([[northWestLat, northWestLon], [northWestLat, northWestLon]])\r\n            setCenter(points[Math.round(points.length / 2)])\r\n            // setBounds([points[Math.round(points.length/2)], points[Math.round(points.length/2) - 10]])\r\n        }\r\n    }, [selectedLeg])\r\n\r\n    return (\r\n        <>\r\n            <CircleMarkerEl coords={startPoints} type='departure' color={pathColor} />\r\n            <CircleMarkerEl coords={endPoints} type='arrival' color={pathColor} />\r\n            <PolygonWithText\r\n                mode={selectedLeg?.mode} route={selectedLeg?.trip?.routeShortName} coords={bounds} center={center} color={pathColor} />\r\n            {/* <Rectangle bounds={bounds} pathOptions={pathColor} fillOpacity={1} /> */}\r\n            <Polyline weight={4} smoothFactor={1} pathOptions={pathColor} positions={points}>\r\n                {selectedLeg && <Tooltip>{selectedLeg?.trip?.routeShortName}</Tooltip>}\r\n            </Polyline>\r\n            <div className={classes.legInfo}>\r\n                <Alert\r\n                    style={{ backgroundColor: defineColor(selectedLeg.mode) }}\r\n                    icon={defineIcon(selectedLeg.mode)}\r\n                    variant=\"filled\"\r\n                    severity=\"info\"\r\n                    onClick={() => setDisplayDrawer(!displayDrawer)}\r\n                >\r\n                    {selectedLeg.mode} {selectedLeg.trip.routeShortName}\r\n                </Alert>\r\n            </div>\r\n        </>\r\n    )\r\n}","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\LegPath\\useLegPathStyles.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\GetCurrentCoords\\GetCurrentCoords.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\GetCurrentCoords\\useCurrentCoordsStyles.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Autocomplete\\useAutocompleteStyles.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\interfaces\\Interfaces.tsx",[],{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","severity":1,"message":"184","line":18,"column":10,"nodeType":"185","messageId":"186","endLine":18,"endColumn":18},{"ruleId":"183","severity":1,"message":"187","line":18,"column":20,"nodeType":"185","messageId":"186","endLine":18,"endColumn":31},{"ruleId":"183","severity":1,"message":"188","line":19,"column":10,"nodeType":"185","messageId":"186","endLine":19,"endColumn":28},{"ruleId":"183","severity":1,"message":"189","line":19,"column":30,"nodeType":"185","messageId":"186","endLine":19,"endColumn":51},{"ruleId":"183","severity":1,"message":"190","line":20,"column":10,"nodeType":"185","messageId":"186","endLine":20,"endColumn":21},{"ruleId":"183","severity":1,"message":"191","line":20,"column":23,"nodeType":"185","messageId":"186","endLine":20,"endColumn":37},{"ruleId":"183","severity":1,"message":"192","line":21,"column":10,"nodeType":"185","messageId":"186","endLine":21,"endColumn":16},{"ruleId":"183","severity":1,"message":"193","line":21,"column":18,"nodeType":"185","messageId":"186","endLine":21,"endColumn":27},{"ruleId":"183","severity":1,"message":"194","line":22,"column":10,"nodeType":"185","messageId":"186","endLine":22,"endColumn":21},{"ruleId":"183","severity":1,"message":"195","line":22,"column":23,"nodeType":"185","messageId":"186","endLine":22,"endColumn":37},{"ruleId":"183","severity":1,"message":"196","line":23,"column":10,"nodeType":"185","messageId":"186","endLine":23,"endColumn":24},{"ruleId":"183","severity":1,"message":"197","line":23,"column":26,"nodeType":"185","messageId":"186","endLine":23,"endColumn":43},{"ruleId":"183","severity":1,"message":"198","line":24,"column":10,"nodeType":"185","messageId":"186","endLine":24,"endColumn":23},{"ruleId":"183","severity":1,"message":"199","line":24,"column":25,"nodeType":"185","messageId":"186","endLine":24,"endColumn":41},{"ruleId":"200","severity":1,"message":"201","line":28,"column":8,"nodeType":"202","endLine":28,"endColumn":31,"suggestions":"203"},{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","replacedBy":"182"},{"ruleId":"204","severity":1,"message":"205","line":21,"column":29,"nodeType":"206","messageId":"207","endLine":21,"endColumn":31},{"ruleId":"204","severity":1,"message":"205","line":21,"column":48,"nodeType":"206","messageId":"207","endLine":21,"endColumn":50},{"ruleId":"208","severity":1,"message":"209","line":29,"column":45,"nodeType":"210","messageId":"211","endLine":29,"endColumn":47},{"ruleId":"183","severity":1,"message":"212","line":5,"column":10,"nodeType":"185","messageId":"186","endLine":5,"endColumn":22},{"ruleId":"200","severity":1,"message":"213","line":17,"column":8,"nodeType":"202","endLine":17,"endColumn":10,"suggestions":"214"},{"ruleId":"183","severity":1,"message":"215","line":2,"column":29,"nodeType":"185","messageId":"186","endLine":2,"endColumn":38},{"ruleId":"183","severity":1,"message":"216","line":2,"column":48,"nodeType":"185","messageId":"186","endLine":2,"endColumn":55},{"ruleId":"200","severity":1,"message":"217","line":38,"column":8,"nodeType":"202","endLine":38,"endColumn":32,"suggestions":"218"},{"ruleId":"183","severity":1,"message":"219","line":50,"column":19,"nodeType":"185","messageId":"186","endLine":50,"endColumn":31},{"ruleId":"183","severity":1,"message":"220","line":51,"column":19,"nodeType":"185","messageId":"186","endLine":51,"endColumn":31},"no-native-reassign",["221"],"no-negated-in-lhs",["222"],"@typescript-eslint/no-unused-vars","'formData' is assigned a value but never used.","Identifier","unusedVar","'setFormData' is assigned a value but never used.","'displayItineraries' is assigned a value but never used.","'setDisplayItineraries' is assigned a value but never used.","'selectedLeg' is assigned a value but never used.","'setSelectedLeg' is assigned a value but never used.","'coords' is assigned a value but never used.","'setCoords' is assigned a value but never used.","'allowCoords' is assigned a value but never used.","'setAllowCoords' is assigned a value but never used.","'selectedCoords' is assigned a value but never used.","'setSelectedCoords' is assigned a value but never used.","'displayDrawer' is assigned a value but never used.","'setDisplayDrawer' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'coords?.id', 'formData', 'id', and 'setFormData'. Either include them or remove the dependency array.","ArrayExpression",["223"],"no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'RouteContext' is defined but never used.","React Hook useCallback has a missing dependency: 'setDisplayDrawer'. Either include it or remove the dependency array.",["224"],"'Rectangle' is defined but never used.","'Polygon' is defined but never used.","React Hook useEffect has a missing dependency: 'map'. Either include it or remove the dependency array.",["225"],"'southEastLat' is assigned a value but never used.","'southEastLon' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"226","fix":"227"},{"desc":"228","fix":"229"},{"desc":"230","fix":"231"},"Update the dependencies array to be: [coords?.id, currentCoordsLocation, formData, id, setFormData]",{"range":"232","text":"233"},"Update the dependencies array to be: [setDisplayDrawer]",{"range":"234","text":"235"},"Update the dependencies array to be: [startPoints, endPoints, map]",{"range":"236","text":"237"},[1172,1195],"[coords?.id, currentCoordsLocation, formData, id, setFormData]",[633,635],"[setDisplayDrawer]",[1461,1485],"[startPoints, endPoints, map]"]