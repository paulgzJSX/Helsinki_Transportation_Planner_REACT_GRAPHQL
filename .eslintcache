[{"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\index.tsx":"1","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\App.tsx":"2","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\pages\\index.js":"3","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\context\\RouteContext.tsx":"4","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Header\\Header.tsx":"5","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\pages\\SchedulePage.tsx":"6","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\pages\\HomePage.tsx":"7","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Header\\HeaderElements.tsx":"8","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Autocomplete\\Autocomplete.tsx":"9","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\hooks\\useItinerary.tsx":"10","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Hero\\HeroElements.tsx":"11","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Hero\\Hero.tsx":"12","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Tab\\Tab.tsx":"13","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\index.js":"14","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\hooks\\useAutocomplete.tsx":"15","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\hooks\\useCoords.tsx":"16","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\styleHooks\\useStyle.tsx":"17","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Input\\Input.tsx":"18","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\Map.js":"19","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Tab\\TabPanel.tsx":"20","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Stops\\Stops.tsx":"21","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\CircleMarkerEl.tsx":"22","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\GetCurrentCoords.tsx":"23","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Itineraries\\Itinerary\\Itinerary.tsx":"24","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\LegPath.tsx":"25","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Input\\InputElements.tsx":"26","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\hooks\\useClickOutside.tsx":"27","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Dropdown\\Dropdown.tsx":"28","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Itineraries\\Leg\\Leg.js":"29","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\helpers\\helpers.tsx":"30","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Itineraries\\Itinerary\\ItineraryElements.tsx":"31","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Itineraries\\Leg\\LegElements.tsx":"32","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\StopAutocomplete\\StopAutocomplete.tsx":"33","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Info\\Info.tsx":"34","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\hooks\\useStopsAutocomplete.tsx":"35","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Info\\InfoElements.tsx":"36","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Dropdown\\DropdownElements.tsx":"37","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\PointSelection.tsx":"38","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Drawer\\Drawer.tsx":"39","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\pages\\PlanningPage.tsx":"40","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\TimeLine\\LegTimeline.tsx":"41"},{"size":219,"mtime":1609161738357,"results":"42","hashOfConfig":"43"},{"size":1195,"mtime":1610274882707,"results":"44","hashOfConfig":"43"},{"size":106,"mtime":1608912244136,"results":"45","hashOfConfig":"43"},{"size":1407,"mtime":1610216058418,"results":"46","hashOfConfig":"43"},{"size":873,"mtime":1610274797400,"results":"47","hashOfConfig":"43"},{"size":2164,"mtime":1610222008101,"results":"48","hashOfConfig":"43"},{"size":141,"mtime":1609587006564,"results":"49","hashOfConfig":"43"},{"size":2102,"mtime":1608913621879,"results":"50","hashOfConfig":"43"},{"size":2502,"mtime":1610109190372,"results":"51","hashOfConfig":"43"},{"size":1777,"mtime":1610302350297,"results":"52","hashOfConfig":"43"},{"size":2086,"mtime":1609692882400,"results":"53","hashOfConfig":"43"},{"size":6131,"mtime":1610094853144,"results":"54","hashOfConfig":"43"},{"size":1159,"mtime":1610355254189,"results":"55","hashOfConfig":"43"},{"size":566,"mtime":1610130110444,"results":"56","hashOfConfig":"43"},{"size":863,"mtime":1609874822407,"results":"57","hashOfConfig":"43"},{"size":838,"mtime":1610103254461,"results":"58","hashOfConfig":"43"},{"size":1601,"mtime":1610355287173,"results":"59","hashOfConfig":"43"},{"size":2219,"mtime":1610009413087,"results":"60","hashOfConfig":"43"},{"size":1452,"mtime":1610190704429,"results":"61","hashOfConfig":"43"},{"size":611,"mtime":1609936067728,"results":"62","hashOfConfig":"43"},{"size":1388,"mtime":1609779750509,"results":"63","hashOfConfig":"43"},{"size":939,"mtime":1610190776646,"results":"64","hashOfConfig":"43"},{"size":1939,"mtime":1610190470634,"results":"65","hashOfConfig":"43"},{"size":2456,"mtime":1609695984818,"results":"66","hashOfConfig":"43"},{"size":3566,"mtime":1610216246993,"results":"67","hashOfConfig":"43"},{"size":1146,"mtime":1609592986892,"results":"68","hashOfConfig":"43"},{"size":509,"mtime":1609094631483,"results":"69","hashOfConfig":"43"},{"size":1915,"mtime":1609179136012,"results":"70","hashOfConfig":"43"},{"size":1571,"mtime":1609867881512,"results":"71","hashOfConfig":"43"},{"size":1793,"mtime":1610303332628,"results":"72","hashOfConfig":"43"},{"size":764,"mtime":1609695889548,"results":"73","hashOfConfig":"43"},{"size":3092,"mtime":1609866528235,"results":"74","hashOfConfig":"43"},{"size":2238,"mtime":1609790931902,"results":"75","hashOfConfig":"43"},{"size":468,"mtime":1609511458269,"results":"76","hashOfConfig":"43"},{"size":437,"mtime":1609769284066,"results":"77","hashOfConfig":"43"},{"size":380,"mtime":1609511391451,"results":"78","hashOfConfig":"43"},{"size":1050,"mtime":1609097518720,"results":"79","hashOfConfig":"43"},{"size":2120,"mtime":1610124902986,"results":"80","hashOfConfig":"43"},{"size":897,"mtime":1610355096590,"results":"81","hashOfConfig":"43"},{"size":1371,"mtime":1610275493994,"results":"82","hashOfConfig":"43"},{"size":1571,"mtime":1610355347296,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"nfe6tj",{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"86"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"86"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"86"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"86"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"86"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"86"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"86"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"86"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"91"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"86"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"86"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"86"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\index.tsx",[],["180","181"],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\App.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\pages\\index.js",[],["182","183"],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\context\\RouteContext.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Header\\Header.tsx",["184","185","186"],"import { NavLink } from 'react-router-dom'\r\nimport { HeaderWrapper, LogoWrapper, SnowFlakeIcon, NavMenu } from './HeaderElements'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <HeaderWrapper>\r\n            <LogoWrapper to='/'>\r\n                <SnowFlakeIcon />\r\n                <h3>RideHelsinki</h3>\r\n            </LogoWrapper>\r\n            <NavMenu>\r\n                <ul>\r\n                    <li><NavLink to='/'>Home</NavLink></li>\r\n                    <li><NavLink to='/schedule'>Schedule</NavLink></li>\r\n                    <li><NavLink to='/planning'>Planning</NavLink></li>\r\n                    <li><a href=\"#\">Disruptions</a></li>\r\n                    <li><a href=\"#\">Points of Interest</a></li>\r\n                    <li><a href=\"#\">Contact HSL</a></li>\r\n                </ul>\r\n            </NavMenu>\r\n        </HeaderWrapper>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\pages\\SchedulePage.tsx",["187"],"import { useContext } from 'react';\r\nimport InputAutocomplete from '../components/Autocomplete/Autocomplete'\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Itinerary } from '../components'\r\nimport { useItinerary } from '../hooks/useItinerary'\r\nimport { ItinerariesWrapper } from '../components/Hero/HeroElements'\r\nimport { RouteContext } from '../context/RouteContext';\r\nimport Tab from '../components/Tab/Tab'\r\nimport Drawer from '../components/Drawer/Drawer'\r\n\r\nconst useButtonStyle = makeStyles({\r\n    root: { marginTop: '1rem' }\r\n})\r\n\r\nexport default function SchedulePage() {\r\n    const classes = useButtonStyle();\r\n    const { formData, displayDrawer } = useContext(RouteContext)\r\n    const [fetchItinerary, { loading, data }] = useItinerary()\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"map-wrapper\">\r\n                <div className=\"left\">\r\n                    <InputAutocomplete id='origin' />\r\n                    <InputAutocomplete id='destination' />\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disableElevation\r\n                        classes={{ root: classes.root }}\r\n                        onClick={() => formData?.origin && formData?.destination && fetchItinerary()}\r\n                    >\r\n                        Search routes\r\n                    </Button>\r\n                    {loading\r\n                        ? 'Loading...'\r\n                        : data &&\r\n                        <ItinerariesWrapper>\r\n                            {data?.plan.itineraries.map((itinerary: any, idx: number) =>\r\n                                <Itinerary key={idx} itinerary={itinerary} />)}\r\n                        </ItinerariesWrapper>\r\n                    }\r\n                </div>\r\n                <div className=\"right\">\r\n                    <div className=\"upper-right\">\r\n                        <Tab />\r\n                    </div>\r\n                    {/* <Map /> */}\r\n                </div>\r\n                <Drawer />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\pages\\HomePage.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Header\\HeaderElements.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Autocomplete\\Autocomplete.tsx",["188"],"import React, { useState, useEffect, useContext } from 'react'\r\nimport { useAutocomplete } from '../../hooks/useAutocomplete'\r\nimport { useCoords } from '../../hooks/useCoords';\r\nimport { useAutocompleteStyle } from '../../styleHooks/useStyle'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { RouteContext } from '../../context/RouteContext';\r\n\r\n\r\n\r\ninterface ILocation {\r\n    label: string;\r\n}\r\n\r\ninterface PropTypes {\r\n    id: string\r\n}\r\n\r\nexport default function InputAutocomplete({ id }: PropTypes) {\r\n    const [term, setTerm] = useState('')\r\n    const [doFetch, setDoFetch] = useState(false)\r\n    const { setFormData, formData, coords } = useContext(RouteContext)\r\n    const classes = useAutocompleteStyle();\r\n\r\n    const { data: suggestions = [] } = useAutocomplete(doFetch, term)\r\n    const { data: currentCoordsLocation } = useCoords(coords?.coords)\r\n    \r\n    useEffect(() => {\r\n        if (currentCoordsLocation && coords?.id === id) {\r\n            setTerm(currentCoordsLocation?.label)\r\n            setFormData({ ...formData, [id]: currentCoordsLocation })\r\n        }\r\n    }, [currentCoordsLocation])\r\n\r\n    useEffect(() => {\r\n        term.length && setDoFetch(true)\r\n    }, [term])\r\n\r\n    return (\r\n        <div style={{ width: 300 }}>\r\n            <Autocomplete\r\n                freeSolo\r\n                fullWidth\r\n                selectOnFocus\r\n                blurOnSelect\r\n                classes={{ input: classes.input, noOptions: classes.noOptions, option: classes.option }}\r\n                noOptionsText='Type to get locations'\r\n                onChange={(_, value) => setFormData({\r\n                    ...formData,\r\n                    [id]: suggestions.find((suggestion: ILocation) => suggestion.label === value)\r\n                })\r\n                }\r\n                onInputChange={(_, inputValue) => setTerm(inputValue)}\r\n                value={term}\r\n                options={suggestions && suggestions.map((suggestion: ILocation) => suggestion.label)}\r\n                renderInput={(params) => (\r\n                    <TextField\r\n                        {...params}\r\n                        label={id === 'origin' ? 'Select origin' : 'Select destination'}\r\n                        size='small'\r\n                        required\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                    />\r\n                )}\r\n            />\r\n        </div>\r\n    )\r\n}","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\hooks\\useItinerary.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Hero\\HeroElements.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Hero\\Hero.tsx",["189","190","191","192","193","194","195","196","197"],"import { useContext } from 'react'\r\nimport { Itinerary } from '../../components/'\r\nimport ChristmasHat from '../../images/christmas_hat.svg'\r\nimport { useItinerary } from '../../hooks/useItinerary';\r\nimport { RouteContext } from '../../context/RouteContext'\r\nimport { FormWrapper, HeroSection, ItinerariesWrapper } from './HeroElements'\r\nimport { BsHouseDoorFill } from 'react-icons/bs'\r\nimport { GiSuitcase } from 'react-icons/gi'\r\nimport { RiBusFill } from 'react-icons/ri'\r\nimport { MdTram } from 'react-icons/md'\r\nimport { FaTrain } from 'react-icons/fa'\r\nimport { IoIosBoat } from 'react-icons/io'\r\nimport { BsExclamationTriangleFill } from 'react-icons/bs'\r\nimport { RiArrowRightSLine } from 'react-icons/ri'\r\nimport { SiMetrodeparis } from 'react-icons/si'\r\nimport Input from '../Input/Input'\r\n \r\nconst Hero = () => {\r\n    const { displayItineraries, setDisplayItineraries } = useContext(RouteContext)\r\n\r\n    const [fetchItinerary, { loading, data }] = useItinerary()\r\n\r\n    if (data) {\r\n        console.log(data);\r\n    }\r\n\r\n    const handleSubmit = (e: any) => {\r\n        e.preventDefault()\r\n        setDisplayItineraries(true)\r\n        fetchItinerary()\r\n    }\r\n\r\n    return (\r\n        <HeroSection>\r\n            {/* <div className=\"journey-planner\">\r\n                <div className=\"left\">\r\n                    <span className='header'>Itinerary suggestions</span>\r\n                    <div className=\"input\">\r\n                        <div className=\"input-form\">\r\n                            <Input id='origin' />\r\n                            <IoSwapVerticalOutline className='input-icon' />\r\n                        </div>\r\n                        <div className=\"input-form\">\r\n                            <input type=\"text\" />\r\n                            <MdAddLocation className='input-icon' />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"additional-settings\">\r\n                        <div className=\"departure\">\r\n                            <AiOutlineClockCircle className='clock' />\r\n                            <span>Leaving now</span>\r\n                            <RiArrowDownSLine className='arrow-down' />\r\n                        </div>\r\n                        <div className=\"settings\">\r\n                            <RiListSettingsFill className='settings-icon' />\r\n                            <span>Settings</span>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"add\">\r\n                        <button className='btn'><BsHouseDoorFill className='btn-icon house' /> Add home</button>\r\n                        <button className='btn'><GiSuitcase className='btn-icon suitcase' /> Add work</button>\r\n                        <button className='btn-plus'>+</button>\r\n                    </div>\r\n\r\n                    <div className=\"grey-line\"></div>\r\n\r\n                    <div className=\"stops-routes\">\r\n                        <span>Stops and routes</span>\r\n                        <div className=\"transportation-types\">\r\n                            <div className=\"bus offset\">\r\n                                <div className=\"bus-icon inset\">\r\n                                    <RiBusFill className='type-icon' />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"tram offset\">\r\n                                <div className=\"tram-icon inset\">\r\n                                    <MdTram className='type-icon'  />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"subway offset\">\r\n                                <div className=\"subway-icon inset\">\r\n                                    <SiMetrodeparis className='type-icon' />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"rail offset\">\r\n                                <div className=\"rail-icon inset\">\r\n                                    <FaTrain className='type-icon'  />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"boat offset\">\r\n                                <div className=\"boat-icon inset\">\r\n                                    <IoIosBoat className='type-icon'  />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <input className='search-stops' type=\"text\" placeholder='Search stops and routes near you'/>\r\n               \r\n                    <div className=\"grey-line-thin\"></div>\r\n\r\n                    <div className=\"services-now\">\r\n                        <div className=\"services-link\">\r\n                            <BsExclamationTriangleFill className='exclamation' />\r\n                            <span>Services now</span>\r\n                        </div>\r\n                        <RiArrowRightSLine className='arrow-right' />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"right\">\r\n                    <Map />\r\n                </div>\r\n            </div> */}\r\n            <p><span>Finland</span> is within <br />your finger tips</p>\r\n            <img src={ChristmasHat} alt=\"christmas-hat-icon\" />\r\n            <FormWrapper>\r\n                <form onSubmit={handleSubmit}>\r\n                    <Input id='origin' />\r\n                    <Input id='destination' />\r\n                    <Input id='date' />\r\n                    <button type='submit' disabled={displayItineraries}>Search Routes</button>\r\n                </form>\r\n            </FormWrapper>\r\n            {displayItineraries && loading\r\n                ? 'Loading...'\r\n                : data &&\r\n                <ItinerariesWrapper>\r\n                    {data?.plan.itineraries.map((itinerary: any, idx: number) =>\r\n                        <Itinerary key={idx} itinerary={itinerary} />)}\r\n                </ItinerariesWrapper>\r\n            } \r\n           \r\n        </HeroSection>\r\n    )\r\n}\r\n\r\nexport default Hero\r\n","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Tab\\Tab.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\index.js",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\hooks\\useAutocomplete.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\hooks\\useCoords.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\styleHooks\\useStyle.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Input\\Input.tsx",["198"],"import { useEffect, useState, useRef, useContext } from 'react'\r\nimport { useAutocomplete } from '../../hooks/useAutocomplete'\r\nimport { useClickOutside } from '../../hooks/useClickOutside'\r\nimport { InputWrapper, LocationIcon, CalendarIcon } from './InputElements'\r\nimport { RouteContext } from '../../context/RouteContext'\r\nimport Dropdown from '../Dropdown/Dropdown'\r\n\r\n\r\nconst Input: React.FC<PropsType> = ({ id }) => {\r\n    const [term, setTerm] = useState('')\r\n    const [displayDropdown, setDisplayDropdown] = useState(false)\r\n    const [doFetch, setDoFetch] = useState(false)\r\n    const inputRef = useRef<HTMLInputElement>(null)\r\n    const dropdownRef = useRef<HTMLDivElement>(null)\r\n    const { setDisplayItineraries } = useContext(RouteContext)\r\n\r\n    const { data: suggestions } = useAutocomplete(doFetch, term)\r\n\r\n    useClickOutside(setDisplayDropdown, inputRef, dropdownRef)\r\n\r\n    useEffect(() => {\r\n        term.length && doFetch ? setDisplayDropdown(true) : setDisplayDropdown(false)\r\n    }, [term])\r\n\r\n    const populateInputAndFetch = (term: string, isToFetch: boolean) => {\r\n        setTerm(term)\r\n        setDisplayItineraries(false)\r\n        setDoFetch(isToFetch)\r\n    }\r\n\r\n    return (\r\n        <InputWrapper>\r\n            {id === 'date' ? <CalendarIcon /> : <LocationIcon />}\r\n            <input\r\n                ref={inputRef}\r\n                type=\"text\"\r\n                autoComplete='off'\r\n                placeholder={id === 'date' ? 'Leaving now' : id === 'origin' ? 'Enter origin' : 'Enter destination'}\r\n                id={id}\r\n                value={term}\r\n                onChange={() => inputRef.current && populateInputAndFetch(inputRef.current.value, true)}\r\n                onFocus={() => inputRef.current && inputRef.current.select()}\r\n                onClick={() => id === 'date' && setDisplayDropdown(true)}\r\n            />\r\n            <Dropdown\r\n                ref={dropdownRef}\r\n                suggestions={suggestions}\r\n                displayDropdown={displayDropdown}\r\n                populateInputAndFetch={populateInputAndFetch}\r\n                id={id}\r\n            />\r\n        </InputWrapper>\r\n    )\r\n}\r\n\r\nexport default Input\r\n\r\n\r\ntype PropsType = { id: string }\r\n","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\Map.js",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Tab\\TabPanel.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Stops\\Stops.tsx",["199","200"],"import { useState } from 'react'\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Container from '@material-ui/core/Container';\r\nimport StopAutocomplete from '../StopAutocomplete/StopAutocomplete'\r\nimport Box from '@material-ui/core/Box'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { IStop } from '../../interfaces/Interfaces'\r\nimport Grid, { GridSpacing } from '@material-ui/core/Grid';\r\n\r\n\r\nexport default function SimpleContainer() {\r\n  const [stop, setStop] = useState<IStop>()\r\n\r\n  return (\r\n    <>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"sm\">\r\n        <Box p={2} display='flex' flexDirection='column' alignItems='center'>\r\n          <StopAutocomplete id='Select stop' setStop={setStop} />\r\n        </Box>\r\n        {stop &&\r\n          <Grid container direction='row' justify='space-between' alignItems='center'>\r\n            <Typography variant='subtitle2'>GTFS ID: {stop?.gtfsId}</Typography>\r\n            <Typography variant='subtitle2'>Stop Location: {stop?.desc}</Typography>\r\n            <Typography variant='subtitle2'>Zone: {stop?.zoneId}</Typography>\r\n            <Typography variant='subtitle2'>Latitude: {stop?.lat}</Typography>\r\n            <Typography variant='subtitle2'>Longitude: {stop?.lon}</Typography>\r\n          </Grid>\r\n        }\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\CircleMarkerEl.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\GetCurrentCoords.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Itineraries\\Itinerary\\Itinerary.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\LegPath.tsx",["201","202","203","204","205"],"import { useState, useEffect, useContext } from 'react'\r\nimport { Polyline, Tooltip, Rectangle, useMap, Polygon, Marker } from \"react-leaflet\";\r\nimport L from 'leaflet';\r\nimport { Alert } from '@material-ui/lab'\r\nimport CircleMarkerEl from '../Map/CircleMarkerEl'\r\nimport { setColor, defineColor } from '../../helpers/helpers'\r\nimport { defineIcon } from '../Itineraries/Leg/LegElements'\r\nimport { RouteContext } from '../../context/RouteContext'\r\n\r\n\r\nconst PolygonWithText = (props: any) => {\r\n    const icon = L.divIcon({\r\n        className: 'rectangle-icon',\r\n        html: `<div>${props.route}</div>`\r\n    })\r\n\r\n    return (\r\n        //   <Rectangle bounds={props.coords} pathOptions={props.color} fillOpacity={1} weight={500}>\r\n        <Marker position={props.center} icon={icon} />\r\n        //   </Rectangle>\r\n    )\r\n}\r\n\r\n\r\nexport default function LegPath({ selectedLeg }: any) {\r\n    const [startPoints, setStartPoints] = useState<any>([60.19, 24.94])\r\n    const [endPoints, setEndPoints] = useState<any>([60.19, 24.94])\r\n    const [points, setPoints] = useState([])\r\n    const [bounds, setBounds] = useState<any>([[60.19, 24.94], [60.19, 24.94]])\r\n    const [center, setCenter] = useState<any>([60.19, 24.94])\r\n    const [pathColor, setPathColor] = useState({})\r\n    const { displayDrawer, setDisplayDrawer } = useContext(RouteContext)\r\n\r\n    const map = useMap()\r\n\r\n    useEffect(() => {\r\n        map.fitBounds([startPoints, endPoints])\r\n    }, [startPoints, endPoints])\r\n\r\n\r\n    useEffect(() => {\r\n        if (selectedLeg) {\r\n            setColor(selectedLeg?.mode, setPathColor)\r\n\r\n            const points = selectedLeg?.legGeometry.points\r\n            setStartPoints(points[0])\r\n            setEndPoints(points[points.length - 1])\r\n            setPoints(points)\r\n            const northWestLat = points[Math.round(points.length / 2)][0] - .0016\r\n            const northWestLon = points[Math.round(points.length / 2)][1] - .005\r\n            const southEastLat = points[Math.round(points.length / 2)][0] + .001\r\n            const southEastLon = points[Math.round(points.length / 2)][1] + .007\r\n            setBounds([[northWestLat, northWestLon], [northWestLat, northWestLon]])\r\n            setCenter(points[Math.round(points.length / 2)])\r\n            // setBounds([points[Math.round(points.length/2)], points[Math.round(points.length/2) - 10]])\r\n        }\r\n    }, [selectedLeg])\r\n\r\n    return (\r\n        <>\r\n            <CircleMarkerEl coords={startPoints} type='departure' color={pathColor} />\r\n            <CircleMarkerEl coords={endPoints} type='arrival' color={pathColor} />\r\n            <PolygonWithText\r\n                mode={selectedLeg?.mode} route={selectedLeg?.trip?.routeShortName} coords={bounds} center={center} color={pathColor} />\r\n            {/* <Rectangle bounds={bounds} pathOptions={pathColor} fillOpacity={1} /> */}\r\n            <Polyline weight={4} smoothFactor={1} pathOptions={pathColor} positions={points}>\r\n                {selectedLeg && <Tooltip>{selectedLeg?.trip?.routeShortName}</Tooltip>}\r\n            </Polyline>\r\n            <div className='leg-info'>\r\n                <Alert\r\n                    style={{ backgroundColor: defineColor(selectedLeg.mode) }}\r\n                    icon={defineIcon(selectedLeg.mode)}\r\n                    variant=\"filled\"\r\n                    severity=\"info\"\r\n                    onClick={() => setDisplayDrawer(!displayDrawer)}\r\n                >\r\n                    {selectedLeg.mode} {selectedLeg.trip.routeShortName}\r\n                </Alert>\r\n            </div>\r\n        </>\r\n    )\r\n}","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Input\\InputElements.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\hooks\\useClickOutside.tsx",["206"],"import { useEffect } from 'react'\r\n\r\nexport const useClickOutside = (callback: Function, inputRef: any, dropdownRef: any) => {\r\n    useEffect(() => {\r\n        document.addEventListener('mousedown', handleClickOutside)\r\n        return () => document.removeEventListener('mousedown', handleClickOutside)\r\n    }, [])\r\n\r\n    const handleClickOutside = (e: any) => {\r\n        if (!inputRef.current?.contains(e.target) && !dropdownRef.current?.contains(e.target)) {\r\n            callback(false)\r\n        }\r\n    }\r\n}","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Dropdown\\Dropdown.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Itineraries\\Leg\\Leg.js",["207","208","209","210","211","212","213","214","215"],"import { useContext, useState } from 'react'\r\nimport { RouteContext } from '../../../context/RouteContext';\r\nimport { convertDuration, convertTime, getMinutes, defineWidth } from '../../../helpers/helpers'\r\nimport Info from '../../Info/Info'\r\nimport { LegWrapper, LegStripe, Departure, defineIcon } from './LegElements'\r\nvar polyline = require('@mapbox/polyline');\r\n\r\nconst Leg = ({ width, mode, routeName, leg}) => {\r\n    const [displayInfo, setDisplayInfo] = useState(false)\r\n\r\n    const { setSelectedLeg } = useContext(RouteContext)\r\n\r\n    const handleClick = () => {\r\n        if (leg) {\r\n            setSelectedLeg({\r\n                ...leg,\r\n                legGeometry: {\r\n                    points: polyline.decode(leg.legGeometry.points)\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <> {mode === 'WALK' || mode === 'WAIT' && width < 5\r\n            ? null\r\n            : <LegWrapper width={width} onClick={handleClick} onMouseEnter={() => setDisplayInfo(true)} onMouseLeave={() => setDisplayInfo(false)}>\r\n                <LegStripe mode={mode}>\r\n                    {defineIcon(mode)}\r\n                    <span>{width > 5 && routeName} {mode === 'WAIT' && 'min'}</span>\r\n                </LegStripe>\r\n                {/* <Departure>\r\n                    {mode !== 'WAIT' && mode !== 'WALK' && <p><span>{convertTime(leg.startTime)}</span> {leg.from.name}</p>}\r\n                </Departure> */}\r\n                {/* {displayInfo && <Info leg={leg} />} */}\r\n            </LegWrapper>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Leg\r\n","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\helpers\\helpers.tsx",["216"],"export function convertDuration(duration: number) {\r\n    let num = duration\r\n    let minutes = num / 60\r\n    let rminutes = Math.floor(minutes)\r\n    // let minutes = (hours - rhours) * 60\r\n    // let rminutes = Math.round(minutes)\r\n    return rminutes\r\n}\r\n\r\nexport function convertTime(timestamp: Date) {\r\n    const date = new Date(timestamp)\r\n    const hours = ('0' + date.getHours()).substr(-2)\r\n    const minutes = ('0' + date.getMinutes()).substr(-2)\r\n\r\n    return hours + ':' + minutes\r\n}\r\n\r\nexport function getMinutes(startTimestamp: Date, endTimestamp: Date) {\r\n    const startDate = new Date(startTimestamp)\r\n    const endDate = new Date(endTimestamp)\r\n\r\n    const diff = endDate.getTime() - startDate.getTime()\r\n    return Math.round(diff / 60000)\r\n}\r\n\r\nexport function defineWidth(startTime: Date, endTime: Date, duration: number) {\r\n    return Math.round((getMinutes(startTime, endTime) * 100) / convertDuration(duration))\r\n}\r\n\r\n\r\nexport function setColor(mode: string, fn: ({}) => void) {\r\n    switch (mode) {\r\n        case 'BUS':\r\n            fn({ color: '#007AC9' })\r\n            break;\r\n\r\n        case 'TRAM':\r\n            fn({ color: '#00985F' })\r\n            break;\r\n\r\n        case 'RAIL':\r\n            fn({ color: '#8C4799' })\r\n            break;\r\n\r\n        case 'SUBWAY':\r\n            fn({ color: '#FF6319' })\r\n            break;\r\n\r\n        default:\r\n            break;\r\n    }\r\n}\r\n\r\nexport function defineColor(mode: string) {\r\n    return mode === 'BUS'\r\n        ? '#007AC9'\r\n        : mode === 'TRAM'\r\n            ? '#00985F'\r\n            : mode === 'RAIL'\r\n                ? '#8C4799'\r\n                : mode === 'SUBWAY'\r\n                    ? '#FF6319'\r\n                    : mode === 'WAIT'\r\n                        ? '#fff'\r\n                        : 'lightgrey';\r\n}\r\n","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Itineraries\\Itinerary\\ItineraryElements.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Itineraries\\Leg\\LegElements.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\StopAutocomplete\\StopAutocomplete.tsx",["217","218","219","220"],"import React, { useState, useEffect, useContext } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useAutocomplete } from '../../hooks/useAutocomplete'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n// import classes from '*.module.css';\r\nimport { RouteContext } from '../../context/RouteContext';\r\nimport { useStopsAutocomplete } from '../../hooks/useStopsAutocomplete'\r\nimport { IStop } from '../../interfaces/Interfaces'\r\n\r\nconst useAutocompleteStyle = makeStyles({\r\n    input: {\r\n        fontSize: 13\r\n    },\r\n    noOptions: {\r\n        fontSize: 13\r\n    },\r\n    option: {\r\n        fontSize: 13\r\n    },\r\n    tag: {\r\n        fontSize: 13\r\n    }\r\n})\r\n\r\ninterface ILocation {\r\n    label: string;\r\n}\r\n\r\ninterface PropTypes {\r\n    id: string,\r\n    setStop: (value: IStop) => void\r\n}\r\n\r\nexport default function StopAutocomplete({ id, setStop }: PropTypes) {\r\n    const [term, setTerm] = useState('')\r\n    const [options, setOptions] = useState([])\r\n    const classes = useAutocompleteStyle();\r\n\r\n    const { data } = useStopsAutocomplete(term)\r\n\r\n    useEffect(() => {\r\n        data && setOptions(data.stops.map((stop: any) => stop.name))\r\n    }, [data])\r\n\r\n    return (\r\n        <div style={{ width: 300 }}>\r\n            <Autocomplete\r\n                freeSolo\r\n                fullWidth\r\n                selectOnFocus\r\n                blurOnSelect\r\n                classes={{ input: classes.input, noOptions: classes.noOptions, option: classes.option }}\r\n                noOptionsText='Type to get locations'\r\n                onChange={(_, value) => setStop(data?.stops.find((stop: any) => stop.name === value))}\r\n                onInputChange={(_, inputValue) => setTerm(inputValue)}\r\n                value={term}\r\n                options={options}\r\n                renderInput={(params) => (\r\n                    <TextField\r\n                        {...params}\r\n                        label={id}\r\n                        size='small'\r\n                        required\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                    />\r\n                )}\r\n            />\r\n        </div>\r\n    );\r\n}","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Info\\Info.tsx",["221","222","223"],"import { convertDuration, convertTime, getMinutes, defineWidth } from '../../helpers/helpers'\r\nimport { InfoWrapper } from '../Info/InfoElements'\r\n\r\nconst Info: React.FC<PropType> = ({ leg }) => {\r\n    return (\r\n        <InfoWrapper>\r\n            {leg.mode !== 'WAIT' && <p>ROUTE: {convertTime(leg.startTime)} {leg.from.name} - {convertTime(leg.endTime)} {leg.to.name}</p>}\r\n        </InfoWrapper>\r\n    )\r\n}\r\n\r\nexport default Info\r\n\r\ntype PropType = {\r\n    leg: any\r\n}","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\hooks\\useStopsAutocomplete.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Info\\InfoElements.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Dropdown\\DropdownElements.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\PointSelection.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Drawer\\Drawer.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\pages\\PlanningPage.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\TimeLine\\LegTimeline.tsx",[],{"ruleId":"224","replacedBy":"225"},{"ruleId":"226","replacedBy":"227"},{"ruleId":"224","replacedBy":"225"},{"ruleId":"226","replacedBy":"227"},{"ruleId":"228","severity":1,"message":"229","line":16,"column":25,"nodeType":"230","endLine":16,"endColumn":37},{"ruleId":"228","severity":1,"message":"229","line":17,"column":25,"nodeType":"230","endLine":17,"endColumn":37},{"ruleId":"228","severity":1,"message":"229","line":18,"column":25,"nodeType":"230","endLine":18,"endColumn":37},{"ruleId":"231","severity":1,"message":"232","line":18,"column":23,"nodeType":"233","messageId":"234","endLine":18,"endColumn":36},{"ruleId":"235","severity":1,"message":"236","line":33,"column":8,"nodeType":"237","endLine":33,"endColumn":31,"suggestions":"238"},{"ruleId":"231","severity":1,"message":"239","line":7,"column":10,"nodeType":"233","messageId":"234","endLine":7,"endColumn":25},{"ruleId":"231","severity":1,"message":"240","line":8,"column":10,"nodeType":"233","messageId":"234","endLine":8,"endColumn":20},{"ruleId":"231","severity":1,"message":"241","line":9,"column":10,"nodeType":"233","messageId":"234","endLine":9,"endColumn":19},{"ruleId":"231","severity":1,"message":"242","line":10,"column":10,"nodeType":"233","messageId":"234","endLine":10,"endColumn":16},{"ruleId":"231","severity":1,"message":"243","line":11,"column":10,"nodeType":"233","messageId":"234","endLine":11,"endColumn":17},{"ruleId":"231","severity":1,"message":"244","line":12,"column":10,"nodeType":"233","messageId":"234","endLine":12,"endColumn":19},{"ruleId":"231","severity":1,"message":"245","line":13,"column":10,"nodeType":"233","messageId":"234","endLine":13,"endColumn":35},{"ruleId":"231","severity":1,"message":"246","line":14,"column":10,"nodeType":"233","messageId":"234","endLine":14,"endColumn":27},{"ruleId":"231","severity":1,"message":"247","line":15,"column":10,"nodeType":"233","messageId":"234","endLine":15,"endColumn":24},{"ruleId":"235","severity":1,"message":"248","line":23,"column":8,"nodeType":"237","endLine":23,"endColumn":14,"suggestions":"249"},{"ruleId":"231","severity":1,"message":"250","line":6,"column":8,"nodeType":"233","messageId":"234","endLine":6,"endColumn":13},{"ruleId":"231","severity":1,"message":"251","line":9,"column":16,"nodeType":"233","messageId":"234","endLine":9,"endColumn":27},{"ruleId":"231","severity":1,"message":"252","line":2,"column":29,"nodeType":"233","messageId":"234","endLine":2,"endColumn":38},{"ruleId":"231","severity":1,"message":"253","line":2,"column":48,"nodeType":"233","messageId":"234","endLine":2,"endColumn":55},{"ruleId":"235","severity":1,"message":"254","line":38,"column":8,"nodeType":"237","endLine":38,"endColumn":32,"suggestions":"255"},{"ruleId":"231","severity":1,"message":"256","line":51,"column":19,"nodeType":"233","messageId":"234","endLine":51,"endColumn":31},{"ruleId":"231","severity":1,"message":"257","line":52,"column":19,"nodeType":"233","messageId":"234","endLine":52,"endColumn":31},{"ruleId":"235","severity":1,"message":"258","line":7,"column":8,"nodeType":"237","endLine":7,"endColumn":10,"suggestions":"259"},{"ruleId":"260","severity":1,"message":"261","line":3,"column":10,"nodeType":"233","messageId":"234","endLine":3,"endColumn":25},{"ruleId":"260","severity":1,"message":"262","line":3,"column":27,"nodeType":"233","messageId":"234","endLine":3,"endColumn":38},{"ruleId":"260","severity":1,"message":"263","line":3,"column":40,"nodeType":"233","messageId":"234","endLine":3,"endColumn":50},{"ruleId":"260","severity":1,"message":"264","line":3,"column":52,"nodeType":"233","messageId":"234","endLine":3,"endColumn":63},{"ruleId":"260","severity":1,"message":"265","line":4,"column":8,"nodeType":"233","messageId":"234","endLine":4,"endColumn":12},{"ruleId":"260","severity":1,"message":"266","line":5,"column":33,"nodeType":"233","messageId":"234","endLine":5,"endColumn":42},{"ruleId":"260","severity":1,"message":"267","line":9,"column":12,"nodeType":"233","messageId":"234","endLine":9,"endColumn":23},{"ruleId":"268","severity":1,"message":"269","line":25,"column":29,"nodeType":"270","messageId":"271","endLine":25,"endColumn":31},{"ruleId":"268","severity":1,"message":"269","line":25,"column":48,"nodeType":"270","messageId":"271","endLine":25,"endColumn":50},{"ruleId":"272","severity":1,"message":"273","line":31,"column":45,"nodeType":"274","messageId":"275","endLine":31,"endColumn":47},{"ruleId":"231","severity":1,"message":"276","line":1,"column":38,"nodeType":"233","messageId":"234","endLine":1,"endColumn":48},{"ruleId":"231","severity":1,"message":"277","line":3,"column":10,"nodeType":"233","messageId":"234","endLine":3,"endColumn":25},{"ruleId":"231","severity":1,"message":"278","line":7,"column":10,"nodeType":"233","messageId":"234","endLine":7,"endColumn":22},{"ruleId":"231","severity":1,"message":"279","line":26,"column":11,"nodeType":"233","messageId":"234","endLine":26,"endColumn":20},{"ruleId":"231","severity":1,"message":"261","line":1,"column":10,"nodeType":"233","messageId":"234","endLine":1,"endColumn":25},{"ruleId":"231","severity":1,"message":"263","line":1,"column":40,"nodeType":"233","messageId":"234","endLine":1,"endColumn":50},{"ruleId":"231","severity":1,"message":"264","line":1,"column":52,"nodeType":"233","messageId":"234","endLine":1,"endColumn":63},"no-native-reassign",["280"],"no-negated-in-lhs",["281"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","@typescript-eslint/no-unused-vars","'displayDrawer' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'coords?.id', 'formData', 'id', and 'setFormData'. Either include them or remove the dependency array.","ArrayExpression",["282"],"'BsHouseDoorFill' is defined but never used.","'GiSuitcase' is defined but never used.","'RiBusFill' is defined but never used.","'MdTram' is defined but never used.","'FaTrain' is defined but never used.","'IoIosBoat' is defined but never used.","'BsExclamationTriangleFill' is defined but never used.","'RiArrowRightSLine' is defined but never used.","'SiMetrodeparis' is defined but never used.","React Hook useEffect has a missing dependency: 'doFetch'. Either include it or remove the dependency array.",["283"],"'Paper' is defined but never used.","'GridSpacing' is defined but never used.","'Rectangle' is defined but never used.","'Polygon' is defined but never used.","React Hook useEffect has a missing dependency: 'map'. Either include it or remove the dependency array.",["284"],"'southEastLat' is assigned a value but never used.","'southEastLon' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'handleClickOutside'. Either include it or remove the dependency array.",["285"],"no-unused-vars","'convertDuration' is defined but never used.","'convertTime' is defined but never used.","'getMinutes' is defined but never used.","'defineWidth' is defined but never used.","'Info' is defined but never used.","'Departure' is defined but never used.","'displayInfo' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'useContext' is defined but never used.","'useAutocomplete' is defined but never used.","'RouteContext' is defined but never used.","'ILocation' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"286","fix":"287"},{"desc":"288","fix":"289"},{"desc":"290","fix":"291"},{"desc":"292","fix":"293"},"Update the dependencies array to be: [coords?.id, currentCoordsLocation, formData, id, setFormData]",{"range":"294","text":"295"},"Update the dependencies array to be: [doFetch, term]",{"range":"296","text":"297"},"Update the dependencies array to be: [startPoints, endPoints, map]",{"range":"298","text":"299"},"Update the dependencies array to be: [handleClickOutside]",{"range":"300","text":"301"},[1162,1185],"[coords?.id, currentCoordsLocation, formData, id, setFormData]",[1009,1015],"[doFetch, term]",[1454,1478],"[startPoints, endPoints, map]",[310,312],"[handleClickOutside]"]