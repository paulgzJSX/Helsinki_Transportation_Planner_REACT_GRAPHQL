[{"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\index.tsx":"1","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\App.tsx":"2","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\context\\RouteContext.tsx":"3","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Header\\Header.tsx":"4","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\pages\\SchedulePage.tsx":"5","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Header\\HeaderElements.tsx":"6","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Autocomplete\\Autocomplete.tsx":"7","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\hooks\\useItinerary.tsx":"8","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Tab\\Tab.tsx":"9","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\index.js":"10","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\hooks\\useAutocomplete.tsx":"11","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\hooks\\useCoords.tsx":"12","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\Map.js":"13","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Tab\\TabPanel.tsx":"14","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Stops\\Stops.tsx":"15","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\CircleMarkerEl.tsx":"16","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Itineraries\\Itinerary\\Itinerary.tsx":"17","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Itineraries\\Leg\\Leg.js":"18","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\helpers\\helpers.tsx":"19","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Itineraries\\Itinerary\\ItineraryElements.tsx":"20","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Itineraries\\Leg\\LegElements.tsx":"21","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\StopAutocomplete\\StopAutocomplete.tsx":"22","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\hooks\\useStopsAutocomplete.tsx":"23","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Drawer\\Drawer.tsx":"24","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\TimeLine\\LegTimeline.tsx":"25","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\TimeLine\\useTimelineStyles.tsx":"26","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\pages\\useSchedulePageStyles.tsx":"27","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\PointSelection\\PointSelection.tsx":"28","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\PointSelection\\usePointSelectionStyles.tsx":"29","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\LegPath\\LegPath.tsx":"30","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\LegPath\\useLegPathStyles.tsx":"31","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\GetCurrentCoords\\GetCurrentCoords.tsx":"32","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\GetCurrentCoords\\useCurrentCoordsStyles.tsx":"33","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Autocomplete\\useAutocompleteStyles.tsx":"34","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\interfaces\\Interfaces.tsx":"35","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\reducers\\formReducer.tsx":"36","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Stops\\useStopsStyles.tsx":"37","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\reducers\\stopReducer.tsx":"38","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Routes\\Routes.tsx":"39","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\hooks\\useRouteAutocomplete.tsx":"40","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\reducers\\routeReducer.tsx":"41","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\RouteAutocomplete\\RouteAutocomplete.tsx":"42","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\RouteAutocomplete\\useRouteAutocompleteStyles.tsx":"43","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\hooks\\useStopsByPattern.tsx":"44","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\Profiler\\ProfilerComp.tsx":"45","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\StopAutocomplete\\useAutocompleteStyles.tsx":"46"},{"size":219,"mtime":1610819230050,"results":"47","hashOfConfig":"48"},{"size":1582,"mtime":1610984766692,"results":"49","hashOfConfig":"48"},{"size":154,"mtime":1610795097188,"results":"50","hashOfConfig":"48"},{"size":537,"mtime":1610559685966,"results":"51","hashOfConfig":"48"},{"size":2083,"mtime":1610739025073,"results":"52","hashOfConfig":"48"},{"size":2102,"mtime":1608913621879,"results":"53","hashOfConfig":"48"},{"size":2450,"mtime":1610989338389,"results":"54","hashOfConfig":"48"},{"size":1831,"mtime":1610787699622,"results":"55","hashOfConfig":"48"},{"size":1273,"mtime":1610993361729,"results":"56","hashOfConfig":"48"},{"size":720,"mtime":1610801536766,"results":"57","hashOfConfig":"48"},{"size":899,"mtime":1610558648468,"results":"58","hashOfConfig":"48"},{"size":989,"mtime":1610971889784,"results":"59","hashOfConfig":"48"},{"size":1469,"mtime":1610992780747,"results":"60","hashOfConfig":"48"},{"size":567,"mtime":1610469653705,"results":"61","hashOfConfig":"48"},{"size":2330,"mtime":1610796353436,"results":"62","hashOfConfig":"48"},{"size":1016,"mtime":1610991134833,"results":"63","hashOfConfig":"48"},{"size":2385,"mtime":1610793548989,"results":"64","hashOfConfig":"48"},{"size":1097,"mtime":1610973399766,"results":"65","hashOfConfig":"48"},{"size":1492,"mtime":1610997089894,"results":"66","hashOfConfig":"48"},{"size":1089,"mtime":1610442688056,"results":"67","hashOfConfig":"48"},{"size":3092,"mtime":1609866528235,"results":"68","hashOfConfig":"48"},{"size":1869,"mtime":1610992054362,"results":"69","hashOfConfig":"48"},{"size":876,"mtime":1610653894493,"results":"70","hashOfConfig":"48"},{"size":940,"mtime":1610990473510,"results":"71","hashOfConfig":"48"},{"size":2773,"mtime":1610881434382,"results":"72","hashOfConfig":"48"},{"size":760,"mtime":1610441454428,"results":"73","hashOfConfig":"48"},{"size":1424,"mtime":1610461253581,"results":"74","hashOfConfig":"48"},{"size":2175,"mtime":1610738697334,"results":"75","hashOfConfig":"48"},{"size":948,"mtime":1610442171226,"results":"76","hashOfConfig":"48"},{"size":2349,"mtime":1610990921796,"results":"77","hashOfConfig":"48"},{"size":349,"mtime":1610442254515,"results":"78","hashOfConfig":"48"},{"size":2176,"mtime":1610990874651,"results":"79","hashOfConfig":"48"},{"size":374,"mtime":1610442386930,"results":"80","hashOfConfig":"48"},{"size":398,"mtime":1610442611419,"results":"81","hashOfConfig":"48"},{"size":3634,"mtime":1610911218588,"results":"82","hashOfConfig":"48"},{"size":1317,"mtime":1610962390303,"results":"83","hashOfConfig":"48"},{"size":706,"mtime":1610901572695,"results":"84","hashOfConfig":"48"},{"size":215,"mtime":1610796259202,"results":"85","hashOfConfig":"48"},{"size":2564,"mtime":1610997502474,"results":"86","hashOfConfig":"48"},{"size":524,"mtime":1610976601759,"results":"87","hashOfConfig":"48"},{"size":218,"mtime":1610879493155,"results":"88","hashOfConfig":"48"},{"size":3663,"mtime":1610991313251,"results":"89","hashOfConfig":"48"},{"size":642,"mtime":1610886876389,"results":"90","hashOfConfig":"48"},{"size":644,"mtime":1610980122352,"results":"91","hashOfConfig":"48"},{"size":613,"mtime":1610985264456,"results":"92","hashOfConfig":"48"},{"size":405,"mtime":1610992014295,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"nfe6tj",{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"96"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"96"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"96"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"96"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\index.tsx",[],["193","194"],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\App.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\context\\RouteContext.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Header\\Header.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\pages\\SchedulePage.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Header\\HeaderElements.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Autocomplete\\Autocomplete.tsx",["195"],"import { useState, useEffect, useContext, memo } from 'react'\r\nimport { useAutocomplete } from '../../hooks/useAutocomplete'\r\nimport { useCoords } from '../../hooks/useCoords';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { RouteContext } from '../../context/RouteContext';\r\nimport { useAutocompleteStyles } from './useAutocompleteStyles'\r\n\r\nexport default memo(function InputAutocomplete({ id }: { id: string }) {\r\n    const [term, setTerm] = useState('')\r\n    const [doFetch, setDoFetch] = useState(false)\r\n    const { state: { coords }, dispatch } = useContext(RouteContext)\r\n    const classes = useAutocompleteStyles();\r\n\r\n    const { data: suggestions = [] } = useAutocomplete(doFetch, term)\r\n    const { data: currentCoordsLocation } = useCoords(coords?.coords)\r\n\r\n    useEffect(() => {\r\n        if (currentCoordsLocation && coords?.id === id) {\r\n            setTerm(currentCoordsLocation?.label)\r\n            dispatch({ type: 'ADD_DATA', payload: { [id]: currentCoordsLocation } })\r\n        }\r\n    }, [currentCoordsLocation])\r\n\r\n    useEffect(() => {\r\n        term.length && setDoFetch(true)\r\n    }, [term])\r\n\r\n    return (\r\n        <div style={{ width: 300 }}>\r\n            <Autocomplete\r\n                freeSolo\r\n                fullWidth\r\n                selectOnFocus\r\n                blurOnSelect\r\n                classes={{ input: classes.input, noOptions: classes.noOptions, option: classes.option }}\r\n                noOptionsText='Type to get locations'\r\n                onChange={(_, value) => {\r\n                    dispatch({\r\n                        type: 'ADD_DATA',\r\n                        payload: { [id]: suggestions.find(suggestion => suggestion.label === value) }\r\n                    })\r\n                }}\r\n                onInputChange={(_, inputValue) => setTerm(inputValue)}\r\n                value={term}\r\n                options={suggestions && suggestions.map(suggestion => suggestion.label)}\r\n                renderInput={(params) => (\r\n                    <TextField\r\n                        {...params}\r\n                        label={id === 'origin' ? 'Select origin' : 'Select destination'}\r\n                        size='small'\r\n                        required\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                    />\r\n                )}\r\n            />\r\n        </div>\r\n    )\r\n})","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\hooks\\useItinerary.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Tab\\Tab.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\index.js",[],["196","197"],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\hooks\\useAutocomplete.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\hooks\\useCoords.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\Map.js",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Tab\\TabPanel.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Stops\\Stops.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\CircleMarkerEl.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Itineraries\\Itinerary\\Itinerary.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Itineraries\\Leg\\Leg.js",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\helpers\\helpers.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Itineraries\\Itinerary\\ItineraryElements.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Itineraries\\Leg\\LegElements.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\StopAutocomplete\\StopAutocomplete.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\hooks\\useStopsAutocomplete.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Drawer\\Drawer.tsx",["198"],"import { useContext, useCallback } from 'react'\r\nimport LegTimeline from '../TimeLine/LegTimeline'\r\nimport { Drawer } from '@material-ui/core/'\r\nimport { RouteContext } from '../../context/RouteContext'\r\n\r\nexport default function LegDrawer() {\r\n    const { dispatch, state: { displayDrawer } } = useContext(RouteContext)\r\n\r\n    const toggleDrawer = useCallback((open: boolean) => (e: KeyboardEvent | MouseEvent) => {\r\n        if (e.type === 'keydown' &&\r\n            ((e as KeyboardEvent).key === 'Tab' ||\r\n                (e as KeyboardEvent).key === 'Shift')\r\n        ) { return }\r\n        \r\n        dispatch({ type: 'DISPLAY_DRAWER', payload: open })\r\n    }, [])\r\n\r\n    return (\r\n        <Drawer\r\n            anchor={'right'}\r\n            open={displayDrawer}\r\n            onClose={toggleDrawer(false)}\r\n            transitionDuration={400}\r\n        >\r\n            <LegTimeline toggleDrawer={toggleDrawer} />\r\n        </Drawer>\r\n    )\r\n}","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\TimeLine\\LegTimeline.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\TimeLine\\useTimelineStyles.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\pages\\useSchedulePageStyles.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\PointSelection\\PointSelection.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\PointSelection\\usePointSelectionStyles.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\LegPath\\LegPath.tsx",["199"],"import { useEffect, useContext, memo } from 'react'\r\nimport { Alert } from '@material-ui/lab'\r\nimport CircleMarkerEl from '../CircleMarkerEl'\r\nimport { defineColor } from '../../../helpers/helpers'\r\nimport { defineIcon } from '../../Itineraries/Leg/LegElements'\r\nimport { RouteContext } from '../../../context/RouteContext'\r\nimport { useLegPathsStyles } from './useLegPathStyles'\r\nimport { ILeg } from '../../../interfaces/Interfaces'\r\n\r\nimport { Polyline, Tooltip, useMap, Marker } from \"react-leaflet\";\r\nimport L from 'leaflet';\r\n\r\nconst PolygonWithText = (props: any) => {\r\n    const icon = L.divIcon({\r\n        className: 'rectangle-icon',\r\n        html: `<div>${props.route}</div>`\r\n    })\r\n    return <Marker position={props.center} icon={icon} />\r\n}\r\n\r\ntype PropTypes = {\r\n    selectedLeg: ILeg\r\n}\r\n\r\nexport default memo(function LegPath({ selectedLeg: { mode, trip: { routeShortName: route }, legGeometry: { points } } }: PropTypes) {\r\n    const { state, dispatch } = useContext(RouteContext)\r\n\r\n    const classes = useLegPathsStyles()\r\n    const map = useMap()\r\n\r\n    const startPoint = points[0]\r\n    const centerPoint = points[Math.round(points.length / 2)]\r\n    const endPoint = points[points.length - 1]\r\n\r\n    useEffect(() => {\r\n        map.fitBounds([startPoint, endPoint])\r\n    }, [points])\r\n\r\n    return (\r\n        <>\r\n            <CircleMarkerEl coords={startPoint} type='departure' />\r\n            <CircleMarkerEl coords={endPoint} type='arrival' />\r\n            <PolygonWithText route={route} center={centerPoint} />\r\n            {points &&\r\n                <Polyline\r\n                    weight={4}\r\n                    smoothFactor={1}\r\n                    pathOptions={{ color: defineColor(mode) }}\r\n                    positions={points}\r\n                >\r\n                    {<Tooltip>{route}</Tooltip>}\r\n                </Polyline>}\r\n            <div className={classes.legInfo}>\r\n                <Alert\r\n                    style={{ backgroundColor: defineColor(mode) }}\r\n                    icon={defineIcon(mode)}\r\n                    variant=\"filled\"\r\n                    severity=\"info\"\r\n                    onClick={() => dispatch({ type: 'DISPLAY_DRAWER', payload: !state.displayDrawer })}\r\n                >\r\n                    {mode} {route}\r\n                </Alert>\r\n            </div>\r\n        </>\r\n    )\r\n})","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\LegPath\\useLegPathStyles.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\GetCurrentCoords\\GetCurrentCoords.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\GetCurrentCoords\\useCurrentCoordsStyles.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Autocomplete\\useAutocompleteStyles.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\interfaces\\Interfaces.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\reducers\\formReducer.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Stops\\useStopsStyles.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\reducers\\stopReducer.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Routes\\Routes.tsx",["200"],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\hooks\\useRouteAutocomplete.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\reducers\\routeReducer.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\RouteAutocomplete\\RouteAutocomplete.tsx",["201"],"import { useState, useEffect } from 'react'\r\nimport { TextField, BottomNavigation, BottomNavigationAction } from '@material-ui/core'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete'\r\nimport DirectionsBusIcon from '@material-ui/icons/DirectionsBus'\r\nimport DirectionsRailwayIcon from '@material-ui/icons/DirectionsRailway'\r\nimport SubwayIcon from '@material-ui/icons/Subway'\r\nimport TramIcon from '@material-ui/icons/Tram'\r\nimport { useRouteAutocomplete } from '../../hooks/useRouteAutocomplete'\r\nimport { useRouteAutocompleteStyles } from './useRouteAutocompleteStyles'\r\nimport { IRoute } from '../../interfaces/Interfaces'\r\n\r\nconst navActions = [\r\n    { value: \"Bus\", icon: <DirectionsBusIcon /> },\r\n    { value: \"Rail\", icon: <DirectionsRailwayIcon /> },\r\n    { value: \"Subway\", icon: <SubwayIcon /> },\r\n    { value: \"Tram\", icon: <TramIcon /> }\r\n]\r\n\r\nexport default function RouteAutocomplete({ dispatch }: any) {\r\n    const [term, setTerm] = useState('')\r\n    const [options, setOptions] = useState([])\r\n    const [mode, setMode] = useState(null)\r\n    const classes = useRouteAutocompleteStyles()\r\n\r\n    const [fetchRoutes, { data }] = useRouteAutocomplete(term, mode)\r\n\r\n    useEffect(() => {\r\n        if (mode !== null && term !== null) {\r\n            fetchRoutes()\r\n        }\r\n    }, [mode])\r\n\r\n    useEffect(() => {\r\n        data && setOptions([...data.routes]\r\n            .sort((a: IRoute, b: IRoute) => a.shortName.localeCompare(b.shortName))\r\n            .map(route => route.shortName + ' ' + route.longName)\r\n        )\r\n    }, [data])\r\n\r\n    const handleChange = (_: any, newValue: string) => {\r\n        setMode(newValue)\r\n        setTerm('')\r\n        dispatch({ type: 'ADD_ROUTE', payload: null })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <BottomNavigation\r\n                value={mode}\r\n                onChange={handleChange}\r\n                showLabels\r\n                className={classes.root}\r\n            >\r\n                {navActions.map(action =>\r\n                    <BottomNavigationAction\r\n                        key={action.value}\r\n                        value={action.value.toUpperCase()}\r\n                        label={action.value}\r\n                        icon={action.icon} />)}\r\n            </BottomNavigation>\r\n            {mode &&\r\n                <div style={{ width: 400 }}>\r\n                    <Autocomplete\r\n                        freeSolo\r\n                        fullWidth\r\n                        selectOnFocus\r\n                        blurOnSelect\r\n                        classes={{ input: classes.input, noOptions: classes.noOptions, option: classes.option }}\r\n                        noOptionsText='Type to get locations'\r\n                        onChange={(_, value) => {\r\n                            const selectedRoute = data?.routes.find((route: IRoute) => route.shortName + ' ' + route.longName === value)\r\n                            dispatch({ type: 'ADD_ROUTE', payload: selectedRoute })\r\n                        }}\r\n                        onInputChange={(_, inputValue) => setTerm(inputValue)}\r\n                        value={term}\r\n                        options={options}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                label='Select route'\r\n                                size='small'\r\n                                required\r\n                                margin=\"normal\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        )}\r\n                    />\r\n                </div>}\r\n        </>\r\n    )\r\n}","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\RouteAutocomplete\\useRouteAutocompleteStyles.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\hooks\\useStopsByPattern.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\Profiler\\ProfilerComp.tsx",[],["202","203"],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\StopAutocomplete\\useAutocompleteStyles.tsx",[],{"ruleId":"204","replacedBy":"205"},{"ruleId":"206","replacedBy":"207"},{"ruleId":"208","severity":1,"message":"209","line":23,"column":8,"nodeType":"210","endLine":23,"endColumn":31,"suggestions":"211"},{"ruleId":"204","replacedBy":"205"},{"ruleId":"206","replacedBy":"207"},{"ruleId":"208","severity":1,"message":"212","line":16,"column":8,"nodeType":"210","endLine":16,"endColumn":10,"suggestions":"213"},{"ruleId":"208","severity":1,"message":"214","line":37,"column":8,"nodeType":"210","endLine":37,"endColumn":16,"suggestions":"215"},{"ruleId":"208","severity":1,"message":"216","line":18,"column":6,"nodeType":"210","endLine":18,"endColumn":23,"suggestions":"217"},{"ruleId":"208","severity":1,"message":"218","line":31,"column":8,"nodeType":"210","endLine":31,"endColumn":14,"suggestions":"219"},{"ruleId":"204","replacedBy":"220"},{"ruleId":"206","replacedBy":"221"},"no-native-reassign",["222"],"no-negated-in-lhs",["223"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'coords?.id', 'dispatch', and 'id'. Either include them or remove the dependency array.","ArrayExpression",["224"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["225"],"React Hook useEffect has missing dependencies: 'endPoint', 'map', and 'startPoint'. Either include them or remove the dependency array.",["226"],"React Hook useEffect has a missing dependency: 'fetchPatterns'. Either include it or remove the dependency array.",["227"],"React Hook useEffect has missing dependencies: 'fetchRoutes' and 'term'. Either include them or remove the dependency array.",["228"],["222"],["223"],"no-global-assign","no-unsafe-negation",{"desc":"229","fix":"230"},{"desc":"231","fix":"232"},{"desc":"233","fix":"234"},{"desc":"235","fix":"236"},{"desc":"237","fix":"238"},"Update the dependencies array to be: [coords?.id, currentCoordsLocation, dispatch, id]",{"range":"239","text":"240"},"Update the dependencies array to be: [dispatch]",{"range":"241","text":"242"},"Update the dependencies array to be: [endPoint, map, points, startPoint]",{"range":"243","text":"244"},"Update the dependencies array to be: [fetchPatterns, route?.patterns]",{"range":"245","text":"246"},"Update the dependencies array to be: [fetchRoutes, mode, term]",{"range":"247","text":"248"},[1084,1107],"[coords?.id, currentCoordsLocation, dispatch, id]",[662,664],"[dispatch]",[1297,1305],"[endPoint, map, points, startPoint]",[891,908],"[fetchPatterns, route?.patterns]",[1300,1306],"[fetchRoutes, mode, term]"]