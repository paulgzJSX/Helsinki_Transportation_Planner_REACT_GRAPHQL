[{"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\index.tsx":"1","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\App.tsx":"2","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\context\\RouteContext.tsx":"3","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Header\\Header.tsx":"4","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\pages\\SchedulePage.tsx":"5","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Header\\HeaderElements.tsx":"6","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Autocomplete\\Autocomplete.tsx":"7","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\hooks\\useItinerary.tsx":"8","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Tab\\Tab.tsx":"9","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\index.js":"10","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\hooks\\useAutocomplete.tsx":"11","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\hooks\\useCoords.tsx":"12","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\styleHooks\\useStyle.tsx":"13","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\Map.js":"14","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Tab\\TabPanel.tsx":"15","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Stops\\Stops.tsx":"16","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\CircleMarkerEl.tsx":"17","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\GetCurrentCoords.tsx":"18","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Itineraries\\Itinerary\\Itinerary.tsx":"19","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\LegPath.tsx":"20","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Itineraries\\Leg\\Leg.js":"21","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\helpers\\helpers.tsx":"22","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Itineraries\\Itinerary\\ItineraryElements.tsx":"23","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Itineraries\\Leg\\LegElements.tsx":"24","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\StopAutocomplete\\StopAutocomplete.tsx":"25","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\hooks\\useStopsAutocomplete.tsx":"26","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\PointSelection.tsx":"27","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Drawer\\Drawer.tsx":"28","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\TimeLine\\LegTimeline.tsx":"29"},{"size":219,"mtime":1609161738357,"results":"30","hashOfConfig":"31"},{"size":1083,"mtime":1610387493651,"results":"32","hashOfConfig":"31"},{"size":1407,"mtime":1610216058418,"results":"33","hashOfConfig":"31"},{"size":550,"mtime":1610388473621,"results":"34","hashOfConfig":"31"},{"size":2149,"mtime":1610397905804,"results":"35","hashOfConfig":"31"},{"size":2102,"mtime":1608913621879,"results":"36","hashOfConfig":"31"},{"size":2717,"mtime":1610391670458,"results":"37","hashOfConfig":"31"},{"size":1777,"mtime":1610302350297,"results":"38","hashOfConfig":"31"},{"size":1186,"mtime":1610391572435,"results":"39","hashOfConfig":"31"},{"size":469,"mtime":1610387783664,"results":"40","hashOfConfig":"31"},{"size":863,"mtime":1609874822407,"results":"41","hashOfConfig":"31"},{"size":838,"mtime":1610103254461,"results":"42","hashOfConfig":"31"},{"size":2202,"mtime":1610397742228,"results":"43","hashOfConfig":"31"},{"size":1452,"mtime":1610190704429,"results":"44","hashOfConfig":"31"},{"size":611,"mtime":1609936067728,"results":"45","hashOfConfig":"31"},{"size":1157,"mtime":1610390634659,"results":"46","hashOfConfig":"31"},{"size":939,"mtime":1610389249653,"results":"47","hashOfConfig":"31"},{"size":2054,"mtime":1610397518176,"results":"48","hashOfConfig":"31"},{"size":2456,"mtime":1609695984818,"results":"49","hashOfConfig":"31"},{"size":3679,"mtime":1610397747314,"results":"50","hashOfConfig":"31"},{"size":1535,"mtime":1610388903441,"results":"51","hashOfConfig":"31"},{"size":1706,"mtime":1610384067538,"results":"52","hashOfConfig":"31"},{"size":1122,"mtime":1610387282261,"results":"53","hashOfConfig":"31"},{"size":3092,"mtime":1609866528235,"results":"54","hashOfConfig":"31"},{"size":2198,"mtime":1610389576699,"results":"55","hashOfConfig":"31"},{"size":407,"mtime":1610389894995,"results":"56","hashOfConfig":"31"},{"size":2127,"mtime":1610395831398,"results":"57","hashOfConfig":"31"},{"size":911,"mtime":1610390211160,"results":"58","hashOfConfig":"31"},{"size":2870,"mtime":1610392767160,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"nfe6tj",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"62"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"82"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"62"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"62"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"62"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\index.tsx",[],["125","126"],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\App.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\context\\RouteContext.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Header\\Header.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\pages\\SchedulePage.tsx",["127"],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Header\\HeaderElements.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Autocomplete\\Autocomplete.tsx",["128"],"import React, { useState, useEffect, useContext } from 'react'\r\nimport { useAutocomplete } from '../../hooks/useAutocomplete'\r\nimport { useCoords } from '../../hooks/useCoords';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { RouteContext } from '../../context/RouteContext';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\ninterface ILocation {\r\n    label: string;\r\n}\r\n\r\ninterface PropTypes {\r\n    id: string\r\n}\r\n\r\nconst useAutocompleteStyle = makeStyles({\r\n    input: {\r\n        fontSize: 13\r\n    },\r\n    noOptions: {\r\n        fontSize: 13\r\n    },\r\n    option: {\r\n        fontSize: 13\r\n    },\r\n    tag: {\r\n        fontSize: 13\r\n    }\r\n})\r\n\r\nexport default function InputAutocomplete({ id }: PropTypes) {\r\n    const [term, setTerm] = useState('')\r\n    const [doFetch, setDoFetch] = useState(false)\r\n    const { setFormData, formData, coords } = useContext(RouteContext)\r\n    const classes = useAutocompleteStyle();\r\n\r\n    const { data: suggestions = [] } = useAutocomplete(doFetch, term)\r\n    const { data: currentCoordsLocation } = useCoords(coords?.coords)\r\n    \r\n    useEffect(() => {\r\n        if (currentCoordsLocation && coords?.id === id) {\r\n            setTerm(currentCoordsLocation?.label)\r\n            setFormData({ ...formData, [id]: currentCoordsLocation })\r\n        }\r\n    }, [currentCoordsLocation])\r\n\r\n    useEffect(() => {\r\n        term.length && setDoFetch(true)\r\n    }, [term])\r\n\r\n    return (\r\n        <div style={{ width: 300 }}>\r\n            <Autocomplete\r\n                freeSolo\r\n                fullWidth\r\n                selectOnFocus\r\n                blurOnSelect\r\n                classes={{ input: classes.input, noOptions: classes.noOptions, option: classes.option }}\r\n                noOptionsText='Type to get locations'\r\n                onChange={(_, value) => setFormData({\r\n                    ...formData,\r\n                    [id]: suggestions.find((suggestion: ILocation) => suggestion.label === value)\r\n                })\r\n                }\r\n                onInputChange={(_, inputValue) => setTerm(inputValue)}\r\n                value={term}\r\n                options={suggestions && suggestions.map((suggestion: ILocation) => suggestion.label)}\r\n                renderInput={(params) => (\r\n                    <TextField\r\n                        {...params}\r\n                        label={id === 'origin' ? 'Select origin' : 'Select destination'}\r\n                        size='small'\r\n                        required\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                    />\r\n                )}\r\n            />\r\n        </div>\r\n    )\r\n}","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\hooks\\useItinerary.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Tab\\Tab.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\index.js",[],["129","130"],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\hooks\\useAutocomplete.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\hooks\\useCoords.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\styleHooks\\useStyle.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\Map.js",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Tab\\TabPanel.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Stops\\Stops.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\CircleMarkerEl.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\GetCurrentCoords.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Itineraries\\Itinerary\\Itinerary.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\LegPath.tsx",["131","132","133","134","135"],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Itineraries\\Leg\\Leg.js",["136","137","138","139","140","141","142","143"],"import { useContext, useState } from 'react'\r\nimport { RouteContext } from '../../../context/RouteContext';\r\nimport { convertDuration, convertTime, getMinutes, defineWidth } from '../../../helpers/helpers'\r\nimport { LegWrapper, LegStripe, Departure, defineIcon } from './LegElements'\r\nvar polyline = require('@mapbox/polyline');\r\n\r\nconst Leg = ({ width, mode, routeName, leg}) => {\r\n    const [displayInfo, setDisplayInfo] = useState(false)\r\n\r\n    const { setSelectedLeg } = useContext(RouteContext)\r\n\r\n    const handleClick = () => {\r\n        if (leg) {\r\n            setSelectedLeg({\r\n                ...leg,\r\n                legGeometry: {\r\n                    points: polyline.decode(leg.legGeometry.points)\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <> {mode === 'WALK' || mode === 'WAIT' && width < 5\r\n            ? null\r\n            : <LegWrapper width={width} onClick={handleClick} onMouseEnter={() => setDisplayInfo(true)} onMouseLeave={() => setDisplayInfo(false)}>\r\n                <LegStripe mode={mode}>\r\n                    {defineIcon(mode)}\r\n                    <span>{width > 5 && routeName} {mode === 'WAIT' && 'min'}</span>\r\n                </LegStripe>\r\n                {/* <Departure>\r\n                    {mode !== 'WAIT' && mode !== 'WALK' && <p><span>{convertTime(leg.startTime)}</span> {leg.from.name}</p>}\r\n                </Departure> */}\r\n                {/* {displayInfo && <Info leg={leg} />} */}\r\n            </LegWrapper>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Leg\r\n","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\helpers\\helpers.tsx",["144"],"export function convertDuration(duration: number) {\r\n    let num = duration\r\n    let minutes = num / 60\r\n    let rminutes = Math.floor(minutes)\r\n    return rminutes\r\n}\r\n\r\nexport function convertTime(timestamp: Date) {\r\n    const date = new Date(timestamp)\r\n    const hours = ('0' + date.getHours()).substr(-2)\r\n    const minutes = ('0' + date.getMinutes()).substr(-2)\r\n\r\n    return hours + ':' + minutes\r\n}\r\n\r\nexport function getMinutes(startTimestamp: Date, endTimestamp: Date) {\r\n    const startDate = new Date(startTimestamp)\r\n    const endDate = new Date(endTimestamp)\r\n\r\n    const diff = endDate.getTime() - startDate.getTime()\r\n    return Math.round(diff / 60000)\r\n}\r\n\r\nexport function defineWidth(startTime: Date, endTime: Date, duration: number) {\r\n    return Math.round((getMinutes(startTime, endTime) * 100) / convertDuration(duration))\r\n}\r\n\r\n\r\nexport function setColor(mode: string, fn: ({}) => void) {\r\n    switch (mode) {\r\n        case 'BUS':\r\n            fn({ color: '#007AC9' })\r\n            break;\r\n\r\n        case 'TRAM':\r\n            fn({ color: '#00985F' })\r\n            break;\r\n\r\n        case 'RAIL':\r\n            fn({ color: '#8C4799' })\r\n            break;\r\n\r\n        case 'SUBWAY':\r\n            fn({ color: '#FF6319' })\r\n            break;\r\n\r\n        default:\r\n            break;\r\n    }\r\n}\r\n\r\nexport function defineColor(mode: string) {\r\n    return mode === 'BUS'\r\n        ? '#007AC9'\r\n        : mode === 'TRAM'\r\n            ? '#00985F'\r\n            : mode === 'RAIL'\r\n                ? '#8C4799'\r\n                : mode === 'SUBWAY'\r\n                    ? '#FF6319'\r\n                    : mode === 'WAIT'\r\n                        ? '#fff'\r\n                        : 'lightgrey';\r\n}\r\n","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Itineraries\\Itinerary\\ItineraryElements.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Itineraries\\Leg\\LegElements.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\StopAutocomplete\\StopAutocomplete.tsx",["145","146","147","148"],"import React, { useState, useEffect, useContext } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useAutocomplete } from '../../hooks/useAutocomplete'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { RouteContext } from '../../context/RouteContext';\r\nimport { useStopsAutocomplete } from '../../hooks/useStopsAutocomplete'\r\nimport { IStop } from '../../interfaces/Interfaces'\r\n\r\nconst useAutocompleteStyle = makeStyles({\r\n    input: {\r\n        fontSize: 13\r\n    },\r\n    noOptions: {\r\n        fontSize: 13\r\n    },\r\n    option: {\r\n        fontSize: 13\r\n    },\r\n    tag: {\r\n        fontSize: 13\r\n    }\r\n})\r\n\r\ninterface ILocation {\r\n    label: string;\r\n}\r\n\r\ninterface PropTypes {\r\n    id: string,\r\n    setStop: (value: IStop) => void\r\n}\r\n\r\nexport default function StopAutocomplete({ id, setStop }: PropTypes) {\r\n    const [term, setTerm] = useState('')\r\n    const [options, setOptions] = useState([])\r\n    const classes = useAutocompleteStyle();\r\n\r\n    const { data } = useStopsAutocomplete(term)\r\n\r\n    useEffect(() => {\r\n        data && setOptions(data.stops.map((stop: any) => stop.name))\r\n    }, [data])\r\n\r\n    return (\r\n        <div style={{ width: 300 }}>\r\n            <Autocomplete\r\n                freeSolo\r\n                fullWidth\r\n                selectOnFocus\r\n                blurOnSelect\r\n                classes={{ input: classes.input, noOptions: classes.noOptions, option: classes.option }}\r\n                noOptionsText='Type to get locations'\r\n                onChange={(_, value) => setStop(data?.stops.find((stop: any) => stop.name === value))}\r\n                onInputChange={(_, inputValue) => setTerm(inputValue)}\r\n                value={term}\r\n                options={options}\r\n                renderInput={(params) => (\r\n                    <TextField\r\n                        {...params}\r\n                        label={id}\r\n                        size='small'\r\n                        required\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                    />\r\n                )}\r\n            />\r\n        </div>\r\n    );\r\n}","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\hooks\\useStopsAutocomplete.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\PointSelection.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Drawer\\Drawer.tsx",["149"],"import { useContext, useCallback } from 'react'\r\nimport LegTimeline from '../TimeLine/LegTimeline'\r\nimport { Drawer } from '@material-ui/core/'\r\nimport { RouteContext } from '../../context/RouteContext'\r\n\r\n\r\nexport default function LegDrawer() {\r\n    const { displayDrawer, setDisplayDrawer } = useContext(RouteContext)\r\n\r\n    const toggleDrawer = useCallback((open: boolean) => (e: KeyboardEvent | MouseEvent) => {\r\n        if (e.type === 'keydown' &&\r\n            ((e as KeyboardEvent).key === 'Tab' ||\r\n                (e as KeyboardEvent).key === 'Shift')\r\n        ) { return }\r\n        \r\n        setDisplayDrawer(open);\r\n    }, [])\r\n\r\n    return (\r\n        <Drawer\r\n            anchor={'right'}\r\n            open={displayDrawer}\r\n            onClose={toggleDrawer(false)}\r\n            transitionDuration={400}\r\n        >\r\n            <LegTimeline toggleDrawer={toggleDrawer} />\r\n        </Drawer>\r\n    )\r\n}","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\TimeLine\\LegTimeline.tsx",[],{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","severity":1,"message":"155","line":18,"column":23,"nodeType":"156","messageId":"157","endLine":18,"endColumn":36},{"ruleId":"158","severity":1,"message":"159","line":47,"column":8,"nodeType":"160","endLine":47,"endColumn":31,"suggestions":"161"},{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","severity":1,"message":"162","line":2,"column":29,"nodeType":"156","messageId":"157","endLine":2,"endColumn":38},{"ruleId":"154","severity":1,"message":"163","line":2,"column":48,"nodeType":"156","messageId":"157","endLine":2,"endColumn":55},{"ruleId":"158","severity":1,"message":"164","line":41,"column":8,"nodeType":"160","endLine":41,"endColumn":32,"suggestions":"165"},{"ruleId":"154","severity":1,"message":"166","line":54,"column":19,"nodeType":"156","messageId":"157","endLine":54,"endColumn":31},{"ruleId":"154","severity":1,"message":"167","line":55,"column":19,"nodeType":"156","messageId":"157","endLine":55,"endColumn":31},{"ruleId":"168","severity":1,"message":"169","line":3,"column":10,"nodeType":"156","messageId":"157","endLine":3,"endColumn":25},{"ruleId":"168","severity":1,"message":"170","line":3,"column":27,"nodeType":"156","messageId":"157","endLine":3,"endColumn":38},{"ruleId":"168","severity":1,"message":"171","line":3,"column":40,"nodeType":"156","messageId":"157","endLine":3,"endColumn":50},{"ruleId":"168","severity":1,"message":"172","line":3,"column":52,"nodeType":"156","messageId":"157","endLine":3,"endColumn":63},{"ruleId":"168","severity":1,"message":"173","line":4,"column":33,"nodeType":"156","messageId":"157","endLine":4,"endColumn":42},{"ruleId":"168","severity":1,"message":"174","line":8,"column":12,"nodeType":"156","messageId":"157","endLine":8,"endColumn":23},{"ruleId":"175","severity":1,"message":"176","line":24,"column":29,"nodeType":"177","messageId":"178","endLine":24,"endColumn":31},{"ruleId":"175","severity":1,"message":"176","line":24,"column":48,"nodeType":"177","messageId":"178","endLine":24,"endColumn":50},{"ruleId":"179","severity":1,"message":"180","line":29,"column":45,"nodeType":"181","messageId":"182","endLine":29,"endColumn":47},{"ruleId":"154","severity":1,"message":"183","line":1,"column":38,"nodeType":"156","messageId":"157","endLine":1,"endColumn":48},{"ruleId":"154","severity":1,"message":"184","line":3,"column":10,"nodeType":"156","messageId":"157","endLine":3,"endColumn":25},{"ruleId":"154","severity":1,"message":"185","line":6,"column":10,"nodeType":"156","messageId":"157","endLine":6,"endColumn":22},{"ruleId":"154","severity":1,"message":"186","line":25,"column":11,"nodeType":"156","messageId":"157","endLine":25,"endColumn":20},{"ruleId":"158","severity":1,"message":"187","line":17,"column":8,"nodeType":"160","endLine":17,"endColumn":10,"suggestions":"188"},"no-native-reassign",["189"],"no-negated-in-lhs",["190"],"@typescript-eslint/no-unused-vars","'displayDrawer' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'coords?.id', 'formData', 'id', and 'setFormData'. Either include them or remove the dependency array.","ArrayExpression",["191"],"'Rectangle' is defined but never used.","'Polygon' is defined but never used.","React Hook useEffect has a missing dependency: 'map'. Either include it or remove the dependency array.",["192"],"'southEastLat' is assigned a value but never used.","'southEastLon' is assigned a value but never used.","no-unused-vars","'convertDuration' is defined but never used.","'convertTime' is defined but never used.","'getMinutes' is defined but never used.","'defineWidth' is defined but never used.","'Departure' is defined but never used.","'displayInfo' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'useContext' is defined but never used.","'useAutocomplete' is defined but never used.","'RouteContext' is defined but never used.","'ILocation' is defined but never used.","React Hook useCallback has a missing dependency: 'setDisplayDrawer'. Either include it or remove the dependency array.",["193"],"no-global-assign","no-unsafe-negation",{"desc":"194","fix":"195"},{"desc":"196","fix":"197"},{"desc":"198","fix":"199"},"Update the dependencies array to be: [coords?.id, currentCoordsLocation, formData, id, setFormData]",{"range":"200","text":"201"},"Update the dependencies array to be: [startPoints, endPoints, map]",{"range":"202","text":"203"},"Update the dependencies array to be: [setDisplayDrawer]",{"range":"204","text":"205"},[1377,1400],"[coords?.id, currentCoordsLocation, formData, id, setFormData]",[1560,1584],"[startPoints, endPoints, map]",[633,635],"[setDisplayDrawer]"]