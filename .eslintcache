[{"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\index.tsx":"1","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\App.tsx":"2","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\context\\RouteContext.tsx":"3","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Header\\Header.tsx":"4","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\pages\\SchedulePage.tsx":"5","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Header\\HeaderElements.tsx":"6","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Autocomplete\\Autocomplete.tsx":"7","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\hooks\\useItinerary.tsx":"8","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Tab\\Tab.tsx":"9","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\index.js":"10","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\hooks\\useAutocomplete.tsx":"11","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\hooks\\useCoords.tsx":"12","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\Map.js":"13","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Tab\\TabPanel.tsx":"14","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Stops\\Stops.tsx":"15","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\CircleMarkerEl.tsx":"16","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Itineraries\\Itinerary\\Itinerary.tsx":"17","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Itineraries\\Leg\\Leg.js":"18","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\helpers\\helpers.tsx":"19","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Itineraries\\Itinerary\\ItineraryElements.tsx":"20","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Itineraries\\Leg\\LegElements.tsx":"21","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\StopAutocomplete\\StopAutocomplete.tsx":"22","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\hooks\\useStopsAutocomplete.tsx":"23","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Drawer\\Drawer.tsx":"24","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\TimeLine\\LegTimeline.tsx":"25","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\TimeLine\\useTimelineStyles.tsx":"26","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\pages\\useSchedulePageStyles.tsx":"27","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\PointSelection\\PointSelection.tsx":"28","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\PointSelection\\usePointSelectionStyles.tsx":"29","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\LegPath\\LegPath.tsx":"30","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\LegPath\\useLegPathStyles.tsx":"31","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\GetCurrentCoords\\GetCurrentCoords.tsx":"32","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\GetCurrentCoords\\useCurrentCoordsStyles.tsx":"33","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Autocomplete\\useAutocompleteStyles.tsx":"34","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\interfaces\\Interfaces.tsx":"35","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\reducers\\formReducer.tsx":"36"},{"size":219,"mtime":1609161738357,"results":"37","hashOfConfig":"38"},{"size":1584,"mtime":1610739388842,"results":"39","hashOfConfig":"38"},{"size":224,"mtime":1610738054425,"results":"40","hashOfConfig":"38"},{"size":537,"mtime":1610559685966,"results":"41","hashOfConfig":"38"},{"size":2083,"mtime":1610739025073,"results":"42","hashOfConfig":"38"},{"size":2102,"mtime":1608913621879,"results":"43","hashOfConfig":"38"},{"size":2476,"mtime":1610738367561,"results":"44","hashOfConfig":"38"},{"size":2117,"mtime":1610729107656,"results":"45","hashOfConfig":"38"},{"size":1269,"mtime":1610560533212,"results":"46","hashOfConfig":"38"},{"size":667,"mtime":1610442396069,"results":"47","hashOfConfig":"38"},{"size":899,"mtime":1610558648468,"results":"48","hashOfConfig":"38"},{"size":941,"mtime":1610557649262,"results":"49","hashOfConfig":"38"},{"size":1471,"mtime":1610738853532,"results":"50","hashOfConfig":"38"},{"size":567,"mtime":1610469653705,"results":"51","hashOfConfig":"38"},{"size":4992,"mtime":1610709989081,"results":"52","hashOfConfig":"38"},{"size":994,"mtime":1610724161993,"results":"53","hashOfConfig":"38"},{"size":2419,"mtime":1610738485078,"results":"54","hashOfConfig":"38"},{"size":1095,"mtime":1610738500922,"results":"55","hashOfConfig":"38"},{"size":1387,"mtime":1610630324839,"results":"56","hashOfConfig":"38"},{"size":1089,"mtime":1610442688056,"results":"57","hashOfConfig":"38"},{"size":3092,"mtime":1609866528235,"results":"58","hashOfConfig":"38"},{"size":2249,"mtime":1610738872578,"results":"59","hashOfConfig":"38"},{"size":876,"mtime":1610653894493,"results":"60","hashOfConfig":"38"},{"size":927,"mtime":1610738422806,"results":"61","hashOfConfig":"38"},{"size":2774,"mtime":1610724308141,"results":"62","hashOfConfig":"38"},{"size":760,"mtime":1610441454428,"results":"63","hashOfConfig":"38"},{"size":1424,"mtime":1610461253581,"results":"64","hashOfConfig":"38"},{"size":2175,"mtime":1610738697334,"results":"65","hashOfConfig":"38"},{"size":948,"mtime":1610442171226,"results":"66","hashOfConfig":"38"},{"size":2337,"mtime":1610738664083,"results":"67","hashOfConfig":"38"},{"size":349,"mtime":1610442254515,"results":"68","hashOfConfig":"38"},{"size":2224,"mtime":1610738568412,"results":"69","hashOfConfig":"38"},{"size":374,"mtime":1610442386930,"results":"70","hashOfConfig":"38"},{"size":398,"mtime":1610442611419,"results":"71","hashOfConfig":"38"},{"size":2891,"mtime":1610479101066,"results":"72","hashOfConfig":"38"},{"size":1345,"mtime":1610738243459,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"nfe6tj",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"76"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"76"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"76"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"97"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"76"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"76"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\index.tsx",[],["154","155"],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\App.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\context\\RouteContext.tsx",["156","157","158","159","160"],"import { useState, createContext, useEffect, useReducer } from 'react'\r\nimport { IRouteContext, IFormData, ILeg } from '../interfaces/Interfaces'\r\n\r\n\r\nexport const RouteContext = createContext<Partial<IRouteContext>>({})\r\n\r\n","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Header\\Header.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\pages\\SchedulePage.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Header\\HeaderElements.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Autocomplete\\Autocomplete.tsx",["161"],"import { useState, useEffect, useContext } from 'react'\r\nimport { useAutocomplete } from '../../hooks/useAutocomplete'\r\nimport { useCoords } from '../../hooks/useCoords';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { RouteContext } from '../../context/RouteContext';\r\nimport { useAutocompleteStyles } from './useAutocompleteStyles'\r\n\r\n\r\ntype PropTypes = {\r\n    id: string\r\n}\r\n\r\nexport default function InputAutocomplete({ id }: PropTypes) {\r\n    const [term, setTerm] = useState('')\r\n    const [doFetch, setDoFetch] = useState(false)\r\n    const { dispatch, state } = useContext(RouteContext)\r\n    const classes = useAutocompleteStyles();\r\n\r\n    const { data: suggestions = [] } = useAutocomplete(doFetch, term)\r\n    const { data: currentCoordsLocation } = useCoords(state.coords?.coords)\r\n\r\n    useEffect(() => {\r\n        if (currentCoordsLocation && state.coords?.id === id) {\r\n            setTerm(currentCoordsLocation?.label)\r\n            dispatch({ type: 'ADD_DATA', payload: { [id]: currentCoordsLocation } })\r\n        }\r\n    }, [currentCoordsLocation])\r\n\r\n    useEffect(() => {\r\n        term.length && setDoFetch(true)\r\n    }, [term])\r\n\r\n    return (\r\n        <div style={{ width: 300 }}>\r\n            <Autocomplete\r\n                freeSolo\r\n                fullWidth\r\n                selectOnFocus\r\n                blurOnSelect\r\n                classes={{ input: classes.input, noOptions: classes.noOptions, option: classes.option }}\r\n                noOptionsText='Type to get locations'\r\n                onChange={(_, value) => {\r\n                    dispatch({\r\n                        type: 'ADD_DATA',\r\n                        payload: { [id]: suggestions.find(suggestion => suggestion.label === value) }\r\n                    })\r\n                }}\r\n                onInputChange={(_, inputValue) => setTerm(inputValue)}\r\n                value={term}\r\n                options={suggestions && suggestions.map(suggestion => suggestion.label)}\r\n                renderInput={(params) => (\r\n                    <TextField\r\n                        {...params}\r\n                        label={id === 'origin' ? 'Select origin' : 'Select destination'}\r\n                        size='small'\r\n                        required\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                    />\r\n                )}\r\n            />\r\n        </div>\r\n    )\r\n}","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\hooks\\useItinerary.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Tab\\Tab.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\index.js",[],["162","163"],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\hooks\\useAutocomplete.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\hooks\\useCoords.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\Map.js",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Tab\\TabPanel.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Stops\\Stops.tsx",["164","165","166","167","168","169","170"],"import { useState, useReducer } from 'react'\r\nimport StopAutocomplete from '../StopAutocomplete/StopAutocomplete'\r\nimport { CssBaseline, Container, Box, Typography, Grid, Paper, Button } from '@material-ui/core';\r\nimport { defineIcon } from '../Itineraries/Leg/LegElements'\r\nimport { IStoptimesWithoutPattern, IStopDetails, IStopTime } from '../../interfaces/Interfaces'\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport { BsBoxArrowInDown } from 'react-icons/bs';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { convertSeconds } from '../../helpers/helpers'\r\n\r\nconst stopReducer = (state: any, action: any) => {\r\n  switch (action.type) {\r\n    case 'ADD_STOP':\r\n        return { stop: action.payload }\r\n    default:\r\n      throw new Error()\r\n  }  \r\n}\r\n\r\nconst useStyles = makeStyles((_: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      padding: '.5rem 1rem',\r\n      backgroundColor: '#dbdbdf'\r\n    },\r\n    buttonMargin: {\r\n      marginRight: '.5rem'\r\n    },\r\n    table: {\r\n      minWidth: 650\r\n    },\r\n    container: {\r\n      overflowY: 'scroll',\r\n      maxHeight: 350\r\n    },\r\n    row: {\r\n      cursor: 'pointer'\r\n    }\r\n  }),\r\n)\r\n\r\nexport default function SimpleContainer() {\r\n  const [stop, setStop] = useState<IStopDetails>()\r\n  const [state, dispatch] = useReducer(stopReducer, { stop: null })\r\n  const classes = useStyles()\r\n\r\n  // stop?.stoptimesWithoutPatterns.map(pattern =>\r\n  // pattern.stoptimes.flat().forEach(el => bar = [...bar, el] ));\r\n\r\n  // console.log(bar.sort((a: any, b: any) => a.scheduledArrival - b.scheduledArrival));\r\n\r\n  return (\r\n    <>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"md\">\r\n        <Box p={2} display='flex' flexDirection='column' alignItems='center'>\r\n          <StopAutocomplete id='Select stop or station' setStop={setStop} dispatch={dispatch} />\r\n        </Box>\r\n        {stop &&\r\n          <>\r\n            {/* <Grid container direction='row' justify='space-around' alignItems='center'>\r\n              <Paper className={classes.root}>\r\n                <Typography variant='subtitle2'>Location: {stop?.desc}</Typography>\r\n              </Paper>\r\n              <Paper className={classes.root}>\r\n                <Typography variant='subtitle2'>Zone: {stop?.zoneId}</Typography>\r\n              </Paper>\r\n              <Paper className={classes.root}>\r\n                <Typography variant='subtitle2'>Latitude: {stop?.lat}</Typography>\r\n              </Paper>\r\n              <Paper className={classes.root}>\r\n                <Typography variant='subtitle2'>Longitude: {stop?.lon}</Typography>\r\n              </Paper>\r\n            </Grid> */}\r\n            <Box component='div' display='flex' alignItems='center' justifyContent='flex-start'>\r\n              {/* {stop?.routes.map(route =>\r\n                <Button variant='contained' color='primary' className={classes.buttonMargin}>\r\n                  {defineIcon(route.mode)} {route.shortName}\r\n                </Button>)} */}\r\n            </Box>\r\n            <TableContainer component='div' className={classes.container} >\r\n              <Table stickyHeader className={classes.table} size='small' aria-label=\"simple table\">\r\n                <TableHead style={{ fontSize: 12 }}>\r\n                  <TableRow hover selected>\r\n                    <TableCell style={{ fontSize: 12 }}>Route</TableCell>\r\n                    <TableCell align=\"right\" style={{ fontSize: 12 }}>From/ Via/ To</TableCell>\r\n                    <TableCell align=\"right\" style={{ fontSize: 12, }}>Departure</TableCell>\r\n                    {/* <TableCell align=\"right\" style={{ fontSize: 12 }}>Towards</TableCell> */}\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {state.stop.stoptimesWithoutPatterns\r\n                      .map((stoptime: IStoptimesWithoutPattern) => (\r\n                        <TableRow className={classes.row} hover>\r\n                          <TableCell component=\"th\" scope=\"row\" style={{ fontSize: 12 }}>\r\n                            {stoptime.trip.route.mode} {stoptime.trip.routeShortName}\r\n                          </TableCell>\r\n                          <TableCell align=\"right\" style={{ fontSize: 12 }}>{stoptime.trip.route.longName}</TableCell>\r\n                          <TableCell align=\"right\" style={{ fontSize: 12 }}>{convertSeconds(stoptime.scheduledDeparture)}</TableCell>\r\n                          {/* <TableCell align=\"right\" style={{ fontSize: 12 }}>{stoptime.headsign}</TableCell> */}\r\n                        </TableRow>\r\n                      ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </>\r\n        }\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\CircleMarkerEl.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Itineraries\\Itinerary\\Itinerary.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Itineraries\\Leg\\Leg.js",["171","172"],"import { useContext } from 'react'\r\nimport { RouteContext } from '../../../context/RouteContext';\r\nimport { LegWrapper, LegStripe, defineIcon } from './LegElements'\r\nlet polyline = require('@mapbox/polyline');\r\n\r\nexport default function Leg({ width, mode, routeName, leg }) {\r\n    const { dispatch } = useContext(RouteContext)\r\n\r\n    const handleClick = () => {\r\n        if (leg) {\r\n            dispatch({\r\n                type: 'SELECT_LEG',\r\n                payload: {\r\n                    ...leg,\r\n                    legGeometry: {\r\n                        points: polyline.decode(leg.legGeometry.points)\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <> {mode === 'WALK' || mode === 'WAIT' && width < 5\r\n            ? null\r\n            : <LegWrapper width={width} onClick={handleClick}>\r\n                <LegStripe mode={mode}>\r\n                    {defineIcon(mode)}\r\n                    <span>{width > 5 && routeName} {mode === 'WAIT' && 'min'}</span>\r\n                </LegStripe>\r\n            </LegWrapper>}\r\n        </>\r\n    )\r\n}\r\n","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\helpers\\helpers.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Itineraries\\Itinerary\\ItineraryElements.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Itineraries\\Leg\\LegElements.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\StopAutocomplete\\StopAutocomplete.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\hooks\\useStopsAutocomplete.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Drawer\\Drawer.tsx",["173"],"import { useContext, useCallback } from 'react'\r\nimport LegTimeline from '../TimeLine/LegTimeline'\r\nimport { Drawer } from '@material-ui/core/'\r\nimport { RouteContext } from '../../context/RouteContext'\r\n\r\nexport default function LegDrawer() {\r\n    const { dispatch, state } = useContext(RouteContext)\r\n\r\n    const toggleDrawer = useCallback((open: boolean) => (e: KeyboardEvent | MouseEvent) => {\r\n        if (e.type === 'keydown' &&\r\n            ((e as KeyboardEvent).key === 'Tab' ||\r\n                (e as KeyboardEvent).key === 'Shift')\r\n        ) { return }\r\n        \r\n        dispatch({ type: 'DISPLAY_DRAWER', payload: open })\r\n    }, [])\r\n\r\n    return (\r\n        <Drawer\r\n            anchor={'right'}\r\n            open={state.displayDrawer}\r\n            onClose={toggleDrawer(false)}\r\n            transitionDuration={400}\r\n        >\r\n            <LegTimeline toggleDrawer={toggleDrawer} />\r\n        </Drawer>\r\n    )\r\n}","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\TimeLine\\LegTimeline.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\TimeLine\\useTimelineStyles.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\pages\\useSchedulePageStyles.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\PointSelection\\PointSelection.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\PointSelection\\usePointSelectionStyles.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\LegPath\\LegPath.tsx",["174"],"import { useEffect, useContext } from 'react'\r\nimport { Alert } from '@material-ui/lab'\r\nimport CircleMarkerEl from '../CircleMarkerEl'\r\nimport { defineColor } from '../../../helpers/helpers'\r\nimport { defineIcon } from '../../Itineraries/Leg/LegElements'\r\nimport { RouteContext } from '../../../context/RouteContext'\r\nimport { useLegPathsStyles } from './useLegPathStyles'\r\nimport { ILeg } from '../../../interfaces/Interfaces'\r\n\r\nimport { Polyline, Tooltip, useMap, Marker } from \"react-leaflet\";\r\nimport L from 'leaflet';\r\n\r\nconst PolygonWithText = (props: any) => {\r\n    const icon = L.divIcon({\r\n        className: 'rectangle-icon',\r\n        html: `<div>${props.route}</div>`\r\n    })\r\n    return <Marker position={props.center} icon={icon} />\r\n}\r\n\r\ntype PropTypes = {\r\n    selectedLeg: ILeg\r\n}\r\n\r\nexport default function LegPath({ selectedLeg: { mode, trip: { routeShortName: route }, legGeometry: { points } } }: PropTypes) {\r\n    const { state, dispatch } = useContext(RouteContext)\r\n\r\n    const classes = useLegPathsStyles()\r\n    const map = useMap()\r\n\r\n    const startPoint = points[0]\r\n    const centerPoint = points[Math.round(points.length / 2)]\r\n    const endPoint = points[points.length - 1]\r\n\r\n    useEffect(() => {\r\n        map.fitBounds([startPoint, endPoint])\r\n    }, [points])\r\n\r\n    return (\r\n        <>\r\n            <CircleMarkerEl coords={startPoint} type='departure' />\r\n            <CircleMarkerEl coords={endPoint} type='arrival' />\r\n            <PolygonWithText route={route} center={centerPoint} />\r\n            {points &&\r\n                <Polyline\r\n                    weight={4}\r\n                    smoothFactor={1}\r\n                    pathOptions={{ color: defineColor(mode) }}\r\n                    positions={points}\r\n                >\r\n                    {<Tooltip>{route}</Tooltip>}\r\n                </Polyline>}\r\n            <div className={classes.legInfo}>\r\n                <Alert\r\n                    style={{ backgroundColor: defineColor(mode) }}\r\n                    icon={defineIcon(mode)}\r\n                    variant=\"filled\"\r\n                    severity=\"info\"\r\n                    onClick={() => dispatch({ type: 'DISPLAY_DRAWER', payload: !state.displayDrawer })}\r\n                >\r\n                    {mode} {route}\r\n                </Alert>\r\n            </div>\r\n        </>\r\n    )\r\n}","C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\LegPath\\useLegPathStyles.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\GetCurrentCoords\\GetCurrentCoords.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Map\\GetCurrentCoords\\useCurrentCoordsStyles.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\components\\Autocomplete\\useAutocompleteStyles.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\interfaces\\Interfaces.tsx",[],"C:\\Projects\\Tutorials\\REACT\\helsinki_transport_material_ui\\frontend\\src\\reducers\\formReducer.tsx",[],{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","severity":1,"message":"180","line":1,"column":10,"nodeType":"181","messageId":"182","endLine":1,"endColumn":18},{"ruleId":"179","severity":1,"message":"183","line":1,"column":35,"nodeType":"181","messageId":"182","endLine":1,"endColumn":44},{"ruleId":"179","severity":1,"message":"184","line":1,"column":46,"nodeType":"181","messageId":"182","endLine":1,"endColumn":56},{"ruleId":"179","severity":1,"message":"185","line":2,"column":25,"nodeType":"181","messageId":"182","endLine":2,"endColumn":34},{"ruleId":"179","severity":1,"message":"186","line":2,"column":36,"nodeType":"181","messageId":"182","endLine":2,"endColumn":40},{"ruleId":"187","severity":1,"message":"188","line":28,"column":8,"nodeType":"189","endLine":28,"endColumn":31,"suggestions":"190"},{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","severity":1,"message":"191","line":3,"column":39,"nodeType":"181","messageId":"182","endLine":3,"endColumn":49},{"ruleId":"179","severity":1,"message":"192","line":3,"column":51,"nodeType":"181","messageId":"182","endLine":3,"endColumn":55},{"ruleId":"179","severity":1,"message":"193","line":3,"column":57,"nodeType":"181","messageId":"182","endLine":3,"endColumn":62},{"ruleId":"179","severity":1,"message":"194","line":3,"column":64,"nodeType":"181","messageId":"182","endLine":3,"endColumn":70},{"ruleId":"179","severity":1,"message":"195","line":4,"column":10,"nodeType":"181","messageId":"182","endLine":4,"endColumn":20},{"ruleId":"179","severity":1,"message":"196","line":5,"column":50,"nodeType":"181","messageId":"182","endLine":5,"endColumn":59},{"ruleId":"179","severity":1,"message":"197","line":7,"column":10,"nodeType":"181","messageId":"182","endLine":7,"endColumn":26},{"ruleId":"198","severity":1,"message":"199","line":24,"column":29,"nodeType":"200","messageId":"201","endLine":24,"endColumn":31},{"ruleId":"198","severity":1,"message":"199","line":24,"column":48,"nodeType":"200","messageId":"201","endLine":24,"endColumn":50},{"ruleId":"187","severity":1,"message":"202","line":16,"column":8,"nodeType":"189","endLine":16,"endColumn":10,"suggestions":"203"},{"ruleId":"187","severity":1,"message":"204","line":37,"column":8,"nodeType":"189","endLine":37,"endColumn":16,"suggestions":"205"},"no-native-reassign",["206"],"no-negated-in-lhs",["207"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useReducer' is defined but never used.","'IFormData' is defined but never used.","'ILeg' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'id', and 'state.coords?.id'. Either include them or remove the dependency array.","ArrayExpression",["208"],"'Typography' is defined but never used.","'Grid' is defined but never used.","'Paper' is defined but never used.","'Button' is defined but never used.","'defineIcon' is defined but never used.","'IStopTime' is defined but never used.","'BsBoxArrowInDown' is defined but never used.","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["209"],"React Hook useEffect has missing dependencies: 'endPoint', 'map', and 'startPoint'. Either include them or remove the dependency array.",["210"],"no-global-assign","no-unsafe-negation",{"desc":"211","fix":"212"},{"desc":"213","fix":"214"},{"desc":"215","fix":"216"},"Update the dependencies array to be: [currentCoordsLocation, dispatch, id, state.coords?.id]",{"range":"217","text":"218"},"Update the dependencies array to be: [dispatch]",{"range":"219","text":"220"},"Update the dependencies array to be: [endPoint, map, points, startPoint]",{"range":"221","text":"222"},[1111,1134],"[currentCoordsLocation, dispatch, id, state.coords?.id]",[643,645],"[dispatch]",[1286,1294],"[endPoint, map, points, startPoint]"]